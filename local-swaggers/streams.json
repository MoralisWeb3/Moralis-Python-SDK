{
    "components": {
        "examples": {},
        "headers": {},
        "parameters": {},
        "requestBodies": {},
        "responses": {},
        "schemas": {
            "UUID": {
                "type": "string",
                "format": "uuid",
                "description": "Stringified UUIDv4.\nSee [RFC 4112](https://tools.ietf.org/html/rfc4122)",
                "pattern": "[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}"
            },
            "Block": {
                "properties": {
                    "number": {
                        "type": "string"
                    },
                    "hash": {
                        "type": "string"
                    },
                    "timestamp": {
                        "type": "string"
                    }
                },
                "required": [
                    "number",
                    "hash",
                    "timestamp"
                ],
                "type": "object",
                "additionalProperties": false
            },
            "TriggerOutput": {
                "properties": {
                    "value": {},
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "value",
                    "name"
                ],
                "type": "object"
            },
            "Log": {
                "properties": {
                    "triggers": {
                        "items": {
                            "$ref": "#/components/schemas/TriggerOutput"
                        },
                        "type": "array"
                    },
                    "logIndex": {
                        "type": "string"
                    },
                    "transactionHash": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "data": {
                        "type": "string"
                    },
                    "topic0": {
                        "type": "string",
                        "nullable": true
                    },
                    "topic1": {
                        "type": "string",
                        "nullable": true
                    },
                    "topic2": {
                        "type": "string",
                        "nullable": true
                    },
                    "topic3": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "logIndex",
                    "transactionHash",
                    "address",
                    "data",
                    "topic0",
                    "topic1",
                    "topic2",
                    "topic3"
                ],
                "type": "object",
                "additionalProperties": false
            },
            "Transaction": {
                "properties": {
                    "triggers": {
                        "items": {
                            "$ref": "#/components/schemas/TriggerOutput"
                        },
                        "type": "array"
                    },
                    "hash": {
                        "type": "string"
                    },
                    "gas": {
                        "type": "string",
                        "nullable": true
                    },
                    "gasPrice": {
                        "type": "string",
                        "nullable": true
                    },
                    "nonce": {
                        "type": "string",
                        "nullable": true
                    },
                    "input": {
                        "type": "string",
                        "nullable": true
                    },
                    "transactionIndex": {
                        "type": "string"
                    },
                    "fromAddress": {
                        "type": "string"
                    },
                    "toAddress": {
                        "type": "string",
                        "nullable": true
                    },
                    "value": {
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "nullable": true
                    },
                    "v": {
                        "type": "string",
                        "nullable": true
                    },
                    "r": {
                        "type": "string",
                        "nullable": true
                    },
                    "s": {
                        "type": "string",
                        "nullable": true
                    },
                    "receiptCumulativeGasUsed": {
                        "type": "string",
                        "nullable": true
                    },
                    "receiptGasUsed": {
                        "type": "string",
                        "nullable": true
                    },
                    "receiptContractAddress": {
                        "type": "string",
                        "nullable": true
                    },
                    "receiptRoot": {
                        "type": "string",
                        "nullable": true
                    },
                    "receiptStatus": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "hash",
                    "gas",
                    "gasPrice",
                    "nonce",
                    "input",
                    "transactionIndex",
                    "fromAddress",
                    "toAddress",
                    "value",
                    "type",
                    "v",
                    "r",
                    "s",
                    "receiptCumulativeGasUsed",
                    "receiptGasUsed",
                    "receiptContractAddress",
                    "receiptRoot",
                    "receiptStatus"
                ],
                "type": "object",
                "additionalProperties": false
            },
            "InternalTransaction": {
                "properties": {
                    "from": {
                        "type": "string",
                        "nullable": true
                    },
                    "to": {
                        "type": "string",
                        "nullable": true
                    },
                    "value": {
                        "type": "string",
                        "nullable": true
                    },
                    "transactionHash": {
                        "type": "string"
                    },
                    "gas": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "from",
                    "to",
                    "value",
                    "transactionHash",
                    "gas"
                ],
                "type": "object",
                "additionalProperties": false
            },
            "AbiInput": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "indexed": {
                        "type": "boolean"
                    },
                    "components": {
                        "items": {
                            "$ref": "#/components/schemas/AbiInput"
                        },
                        "type": "array"
                    },
                    "internalType": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "type"
                ],
                "type": "object",
                "additionalProperties": false
            },
            "AbiOutput": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "components": {
                        "items": {
                            "$ref": "#/components/schemas/AbiOutput"
                        },
                        "type": "array"
                    },
                    "internalType": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "type"
                ],
                "type": "object",
                "additionalProperties": false
            },
            "AbiItem": {
                "description": "The abi to parse the log object of the contract",
                "properties": {
                    "anonymous": {
                        "type": "boolean"
                    },
                    "constant": {
                        "type": "boolean"
                    },
                    "inputs": {
                        "items": {
                            "$ref": "#/components/schemas/AbiInput"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "outputs": {
                        "items": {
                            "$ref": "#/components/schemas/AbiOutput"
                        },
                        "type": "array"
                    },
                    "payable": {
                        "type": "boolean"
                    },
                    "stateMutability": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "gas": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "required": [
                    "type"
                ],
                "type": "object",
                "additionalProperties": false,
                "example": {}
            },
            "webhookTypes.IWebhookUnParsed": {
                "properties": {
                    "block": {
                        "$ref": "#/components/schemas/Block"
                    },
                    "chainId": {
                        "type": "string"
                    },
                    "logs": {
                        "items": {
                            "$ref": "#/components/schemas/Log"
                        },
                        "type": "array"
                    },
                    "txs": {
                        "items": {
                            "$ref": "#/components/schemas/Transaction"
                        },
                        "type": "array"
                    },
                    "txsInternal": {
                        "items": {
                            "$ref": "#/components/schemas/InternalTransaction"
                        },
                        "type": "array"
                    },
                    "abi": {
                        "items": {
                            "$ref": "#/components/schemas/AbiItem"
                        },
                        "type": "array"
                    },
                    "retries": {
                        "type": "number",
                        "format": "double"
                    },
                    "confirmed": {
                        "type": "boolean"
                    },
                    "tag": {
                        "type": "string"
                    },
                    "streamId": {
                        "type": "string"
                    }
                },
                "required": [
                    "block",
                    "chainId",
                    "logs",
                    "txs",
                    "txsInternal",
                    "abi",
                    "retries",
                    "confirmed",
                    "tag",
                    "streamId"
                ],
                "type": "object",
                "additionalProperties": false
            },
            "AptosBlock": {
                "properties": {
                    "lastVersion": {
                        "type": "string"
                    },
                    "firstVersion": {
                        "type": "string"
                    },
                    "hash": {
                        "type": "string"
                    },
                    "timestamp": {
                        "type": "string"
                    },
                    "number": {
                        "type": "string"
                    }
                },
                "required": [
                    "lastVersion",
                    "firstVersion",
                    "hash",
                    "timestamp",
                    "number"
                ],
                "type": "object"
            },
            "AptosCoin": {
                "properties": {
                    "symbol": {
                        "type": "string"
                    },
                    "decimals": {
                        "type": "number",
                        "format": "double"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "symbol",
                    "decimals",
                    "name"
                ],
                "type": "object"
            },
            "AptosCoinDeposit": {
                "properties": {
                    "txHash": {
                        "type": "string"
                    },
                    "sequenceNumber": {
                        "type": "string"
                    },
                    "valueWithDecimals": {
                        "type": "string"
                    },
                    "coin": {
                        "$ref": "#/components/schemas/AptosCoin"
                    },
                    "address": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "txHash",
                    "sequenceNumber",
                    "valueWithDecimals",
                    "coin",
                    "address",
                    "value"
                ],
                "type": "object"
            },
            "AptosCoinTransfer": {
                "properties": {
                    "txHash": {
                        "type": "string"
                    },
                    "transaction": {
                        "type": "string"
                    },
                    "valueWithDecimals": {
                        "type": "number",
                        "format": "double"
                    },
                    "from": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    },
                    "to": {
                        "type": "string"
                    },
                    "coin": {
                        "$ref": "#/components/schemas/AptosCoin"
                    }
                },
                "required": [
                    "txHash",
                    "transaction",
                    "valueWithDecimals",
                    "from",
                    "value",
                    "to",
                    "coin"
                ],
                "type": "object"
            },
            "AptosCoinWithdrawal": {
                "properties": {
                    "txHash": {
                        "type": "string"
                    },
                    "sequenceNumber": {
                        "type": "string"
                    },
                    "valueWithDecimals": {
                        "type": "string"
                    },
                    "coin": {
                        "$ref": "#/components/schemas/AptosCoin"
                    },
                    "address": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "txHash",
                    "sequenceNumber",
                    "valueWithDecimals",
                    "coin",
                    "address",
                    "value"
                ],
                "type": "object"
            },
            "AptosTransaction": {
                "properties": {
                    "gasUnitPrice": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "gasUsed": {
                        "type": "string"
                    },
                    "eventChangeHash": {
                        "type": "string"
                    },
                    "stateChangeHash": {
                        "type": "string"
                    },
                    "gasLimit": {
                        "type": "string"
                    },
                    "sender": {
                        "type": "string"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "hash": {
                        "type": "string"
                    }
                },
                "required": [
                    "gasUnitPrice",
                    "type",
                    "gasUsed",
                    "eventChangeHash",
                    "stateChangeHash",
                    "gasLimit",
                    "sender",
                    "success",
                    "hash"
                ],
                "type": "object"
            },
            "webhookTypes.AptosWebhook": {
                "properties": {
                    "block": {
                        "$ref": "#/components/schemas/AptosBlock"
                    },
                    "changes": {
                        "items": {
                            "properties": {
                                "txHash": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": {},
                            "required": [
                                "txHash"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "coinDeposits": {
                        "items": {
                            "$ref": "#/components/schemas/AptosCoinDeposit"
                        },
                        "type": "array"
                    },
                    "coinTransfers": {
                        "items": {
                            "$ref": "#/components/schemas/AptosCoinTransfer"
                        },
                        "type": "array"
                    },
                    "coinWithdrawals": {
                        "items": {
                            "$ref": "#/components/schemas/AptosCoinWithdrawal"
                        },
                        "type": "array"
                    },
                    "events": {
                        "items": {
                            "properties": {
                                "txHash": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": {},
                            "required": [
                                "txHash"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "network": {
                        "type": "string",
                        "enum": [
                            "mainnet",
                            "testnet"
                        ]
                    },
                    "payloads": {
                        "items": {
                            "properties": {
                                "txHash": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": {},
                            "required": [
                                "txHash"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "retries": {
                        "type": "number",
                        "format": "double"
                    },
                    "streamId": {
                        "type": "string"
                    },
                    "tag": {
                        "type": "string"
                    },
                    "transactions": {
                        "items": {
                            "$ref": "#/components/schemas/AptosTransaction"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "block",
                    "changes",
                    "coinDeposits",
                    "coinTransfers",
                    "coinWithdrawals",
                    "events",
                    "network",
                    "payloads",
                    "retries",
                    "streamId",
                    "tag",
                    "transactions"
                ],
                "type": "object",
                "additionalProperties": false
            },
            "webhookTypes.ITinyPayload": {
                "properties": {
                    "chainId": {
                        "type": "string"
                    },
                    "confirmed": {
                        "type": "boolean"
                    },
                    "block": {
                        "type": "string"
                    },
                    "records": {
                        "type": "number",
                        "format": "double"
                    },
                    "retries": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "required": [
                    "chainId",
                    "confirmed",
                    "block",
                    "records",
                    "retries"
                ],
                "type": "object",
                "additionalProperties": false
            },
            "HistoryModel": {
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/UUID"
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "payload": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/webhookTypes.IWebhookUnParsed"
                            },
                            {
                                "$ref": "#/components/schemas/webhookTypes.AptosWebhook"
                            }
                        ]
                    },
                    "tinyPayload": {
                        "$ref": "#/components/schemas/webhookTypes.ITinyPayload"
                    },
                    "errorMessage": {
                        "type": "string"
                    },
                    "webhookUrl": {
                        "type": "string"
                    },
                    "streamId": {
                        "type": "string"
                    },
                    "tag": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "date",
                    "tinyPayload",
                    "errorMessage",
                    "webhookUrl",
                    "streamId",
                    "tag"
                ],
                "type": "object",
                "additionalProperties": false
            },
            "historyTypes.HistoryResponse": {
                "properties": {
                    "result": {
                        "items": {
                            "$ref": "#/components/schemas/HistoryModel"
                        },
                        "type": "array"
                    },
                    "cursor": {
                        "type": "string"
                    },
                    "total": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "required": [
                    "result",
                    "total"
                ],
                "type": "object",
                "additionalProperties": false
            },
            "historyTypes.HistoryModel": {
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/UUID"
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "payload": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/webhookTypes.IWebhookUnParsed"
                            },
                            {
                                "$ref": "#/components/schemas/webhookTypes.AptosWebhook"
                            }
                        ]
                    },
                    "tinyPayload": {
                        "$ref": "#/components/schemas/webhookTypes.ITinyPayload"
                    },
                    "errorMessage": {
                        "type": "string"
                    },
                    "webhookUrl": {
                        "type": "string"
                    },
                    "streamId": {
                        "type": "string"
                    },
                    "tag": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "date",
                    "tinyPayload",
                    "errorMessage",
                    "webhookUrl",
                    "streamId",
                    "tag"
                ],
                "type": "object",
                "additionalProperties": false
            },
            "streamTypes.UUID": {
                "type": "string",
                "format": "uuid",
                "description": "Stringified UUIDv4.\nSee [RFC 4112](https://tools.ietf.org/html/rfc4122)",
                "pattern": "[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}"
            },
            "historyTypes.UUID": {
                "type": "string",
                "format": "uuid",
                "description": "Stringified UUIDv4.\nSee [RFC 4112](https://tools.ietf.org/html/rfc4122)",
                "pattern": "[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}"
            },
            "IWebhookDeliveryLogsModel": {
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/UUID"
                    },
                    "streamId": {
                        "type": "string"
                    },
                    "chain": {
                        "type": "string"
                    },
                    "webhookUrl": {
                        "type": "string"
                    },
                    "tag": {
                        "type": "string"
                    },
                    "retries": {
                        "type": "number",
                        "format": "double"
                    },
                    "deliveryStatus": {
                        "type": "string",
                        "enum": [
                            "failed",
                            "success"
                        ]
                    },
                    "blockNumber": {
                        "type": "number",
                        "format": "double"
                    },
                    "errorMessage": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "evm",
                            "aptos"
                        ]
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "required": [
                    "id",
                    "streamId",
                    "chain",
                    "webhookUrl",
                    "tag",
                    "retries",
                    "deliveryStatus",
                    "blockNumber",
                    "errorMessage",
                    "type",
                    "createdAt"
                ],
                "type": "object",
                "additionalProperties": false
            },
            "historyTypes.IWebhookDeliveryLogsResponse": {
                "properties": {
                    "result": {
                        "items": {
                            "$ref": "#/components/schemas/IWebhookDeliveryLogsModel"
                        },
                        "type": "array"
                    },
                    "cursor": {
                        "type": "string"
                    },
                    "total": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "required": [
                    "result",
                    "total"
                ],
                "type": "object",
                "additionalProperties": false
            },
            "SettingsRegion": {
                "enum": [
                    "us-east-1",
                    "us-west-2",
                    "eu-central-1",
                    "ap-southeast-1"
                ],
                "type": "string"
            },
            "settingsTypes.SettingsModel": {
                "properties": {
                    "region": {
                        "$ref": "#/components/schemas/SettingsRegion",
                        "description": "The region from where all the webhooks will be posted for this project"
                    },
                    "secretKey": {
                        "type": "string",
                        "description": "The secret key to validate the webhooks"
                    }
                },
                "type": "object",
                "additionalProperties": false
            },
            "UsageStatsStreams": {
                "properties": {
                    "totalWebhooksDelivered": {
                        "type": "number",
                        "format": "double",
                        "description": "The total amount of webhooks delivered across all streams"
                    },
                    "totalWebhooksFailed": {
                        "type": "number",
                        "format": "double",
                        "description": "The total amount of failed webhooks across all streams"
                    },
                    "totalLogsProcessed": {
                        "type": "number",
                        "format": "double",
                        "description": "The total amount of logs processed across all streams, this includes failed webhooks"
                    },
                    "totalTxsProcessed": {
                        "type": "number",
                        "format": "double",
                        "description": "The total amount of txs processed across all streams, this includes failed webhooks"
                    },
                    "totalTxsInternalProcessed": {
                        "type": "number",
                        "format": "double",
                        "description": "The total amount of internal txs processed across all streams, this includes failed webhooks"
                    },
                    "streamId": {
                        "type": "string",
                        "description": "The stream id"
                    }
                },
                "required": [
                    "totalWebhooksDelivered",
                    "totalWebhooksFailed",
                    "totalLogsProcessed",
                    "totalTxsProcessed",
                    "totalTxsInternalProcessed",
                    "streamId"
                ],
                "type": "object",
                "additionalProperties": false
            },
            "usagestatsTypes.UsageStatsModel": {
                "properties": {
                    "totalWebhooksDelivered": {
                        "type": "number",
                        "format": "double",
                        "description": "The total amount of webhooks delivered across all streams"
                    },
                    "totalWebhooksFailed": {
                        "type": "number",
                        "format": "double",
                        "description": "The total amount of failed webhooks across all streams"
                    },
                    "totalLogsProcessed": {
                        "type": "number",
                        "format": "double",
                        "description": "The total amount of logs processed across all streams, this includes failed webhooks"
                    },
                    "totalTxsProcessed": {
                        "type": "number",
                        "format": "double",
                        "description": "The total amount of txs processed across all streams, this includes failed webhooks"
                    },
                    "totalTxsInternalProcessed": {
                        "type": "number",
                        "format": "double",
                        "description": "The total amount of internal txs processed across all streams, this includes failed webhooks"
                    },
                    "streams": {
                        "items": {
                            "$ref": "#/components/schemas/UsageStatsStreams"
                        },
                        "type": "array",
                        "description": "Array of stream stats"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date since this stats are being counted"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date since this stats were last updated"
                    }
                },
                "required": [
                    "totalWebhooksDelivered",
                    "totalWebhooksFailed",
                    "totalLogsProcessed",
                    "totalTxsProcessed",
                    "totalTxsInternalProcessed"
                ],
                "type": "object",
                "additionalProperties": false
            },
            "streamsTypes.UUID": {
                "type": "string",
                "format": "uuid",
                "description": "Stringified UUIDv4.\nSee [RFC 4112](https://tools.ietf.org/html/rfc4122)",
                "pattern": "[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}"
            },
            "StreamsStatus": {
                "description": "The stream status:\n[active] The Stream is healthy and processing blocks\n[paused] The Stream is paused and is not processing blocks\n[error] The Stream has encountered an error and is not processing blocks",
                "enum": [
                    "active",
                    "paused",
                    "error",
                    "terminated"
                ],
                "type": "string"
            },
            "getNativeBalances": {
                "properties": {
                    "selectors": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "tx",
                            "log",
                            "erc20transfer",
                            "erc20approval",
                            "nfttransfer",
                            "internalTx"
                        ]
                    }
                },
                "required": [
                    "selectors",
                    "type"
                ],
                "type": "object",
                "additionalProperties": false
            },
            "StreamsFilter": {
                "description": "The filter object for the topic0\nhttps://docs.moralis.io/docs/filter-streams",
                "properties": {},
                "type": "object",
                "additionalProperties": {},
                "example": {}
            },
            "advancedOptions": {
                "description": "Advanced Options for each specific topic",
                "properties": {
                    "topic0": {
                        "type": "string"
                    },
                    "filter": {
                        "$ref": "#/components/schemas/StreamsFilter"
                    },
                    "includeNativeTxs": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "topic0"
                ],
                "type": "object",
                "additionalProperties": false
            },
            "StreamsTrigger": {
                "description": "Trigger",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "tx",
                            "log",
                            "erc20transfer",
                            "erc20approval",
                            "nfttransfer"
                        ]
                    },
                    "contractAddress": {
                        "type": "string"
                    },
                    "inputs": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "items": {},
                                    "type": "array"
                                }
                            ]
                        },
                        "type": "array"
                    },
                    "functionAbi": {
                        "$ref": "#/components/schemas/AbiItem"
                    },
                    "topic0": {
                        "type": "string"
                    },
                    "callFrom": {
                        "type": "string"
                    }
                },
                "required": [
                    "type",
                    "contractAddress",
                    "functionAbi"
                ],
                "type": "object",
                "additionalProperties": false
            },
            "StreamsModel": {
                "properties": {
                    "webhookUrl": {
                        "type": "string",
                        "description": "Webhook URL where moralis will send the POST request."
                    },
                    "description": {
                        "type": "string",
                        "description": "A description for this stream"
                    },
                    "tag": {
                        "type": "string",
                        "description": "A user-provided tag that will be send along the webhook, the user can use this tag to identify the specific stream if multiple streams are present"
                    },
                    "topic0": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "nullable": true,
                        "description": "An Array of topic0's in string-signature format ex: ['FunctionName(address,uint256)']"
                    },
                    "allAddresses": {
                        "type": "boolean",
                        "description": "Include events for all addresses (only applied when abi and topic0 is provided)"
                    },
                    "includeNativeTxs": {
                        "type": "boolean",
                        "description": "Include or not native transactions defaults to false"
                    },
                    "includeContractLogs": {
                        "type": "boolean",
                        "description": "Include or not logs of contract interactions defaults to false"
                    },
                    "includeInternalTxs": {
                        "type": "boolean",
                        "description": "Include or not include internal transactions defaults to false"
                    },
                    "includeAllTxLogs": {
                        "type": "boolean",
                        "description": "Include all logs if atleast one value in tx or log matches stream config"
                    },
                    "getNativeBalances": {
                        "items": {
                            "$ref": "#/components/schemas/getNativeBalances"
                        },
                        "type": "array",
                        "description": "Include native balances for each address in the webhook"
                    },
                    "abi": {
                        "type": "object",
                        "nullable": true
                    },
                    "advancedOptions": {
                        "items": {
                            "$ref": "#/components/schemas/advancedOptions"
                        },
                        "type": "array",
                        "nullable": true
                    },
                    "chainIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "description": "The ids of the chains for this stream in hex Ex: [\"0x1\",\"0x38\"]"
                    },
                    "demo": {
                        "type": "boolean",
                        "description": "Indicator if it is a demo stream"
                    },
                    "triggers": {
                        "items": {
                            "$ref": "#/components/schemas/StreamsTrigger"
                        },
                        "type": "array",
                        "nullable": true,
                        "description": "triggers"
                    },
                    "id": {
                        "$ref": "#/components/schemas/UUID",
                        "description": "The unique uuid of the stream"
                    },
                    "status": {
                        "$ref": "#/components/schemas/StreamsStatus",
                        "description": "The status of the stream."
                    },
                    "statusMessage": {
                        "type": "string",
                        "description": "Description of current status of stream."
                    }
                },
                "required": [
                    "webhookUrl",
                    "description",
                    "tag",
                    "chainIds",
                    "id",
                    "status",
                    "statusMessage"
                ],
                "type": "object",
                "additionalProperties": false
            },
            "streamsTypes.StreamsResponse": {
                "properties": {
                    "result": {
                        "items": {
                            "$ref": "#/components/schemas/StreamsModel"
                        },
                        "type": "array",
                        "description": "Array of project Streams"
                    },
                    "cursor": {
                        "type": "string",
                        "description": "Cursor for fetching next page"
                    },
                    "total": {
                        "type": "number",
                        "format": "double",
                        "description": "Total count of streams on the project"
                    }
                },
                "required": [
                    "result",
                    "total"
                ],
                "type": "object",
                "additionalProperties": false
            },
            "streamsTypes.StreamsModel": {
                "properties": {
                    "webhookUrl": {
                        "type": "string",
                        "description": "Webhook URL where moralis will send the POST request."
                    },
                    "description": {
                        "type": "string",
                        "description": "A description for this stream"
                    },
                    "tag": {
                        "type": "string",
                        "description": "A user-provided tag that will be send along the webhook, the user can use this tag to identify the specific stream if multiple streams are present"
                    },
                    "topic0": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "nullable": true,
                        "description": "An Array of topic0's in string-signature format ex: ['FunctionName(address,uint256)']"
                    },
                    "allAddresses": {
                        "type": "boolean",
                        "description": "Include events for all addresses (only applied when abi and topic0 is provided)"
                    },
                    "includeNativeTxs": {
                        "type": "boolean",
                        "description": "Include or not native transactions defaults to false"
                    },
                    "includeContractLogs": {
                        "type": "boolean",
                        "description": "Include or not logs of contract interactions defaults to false"
                    },
                    "includeInternalTxs": {
                        "type": "boolean",
                        "description": "Include or not include internal transactions defaults to false"
                    },
                    "includeAllTxLogs": {
                        "type": "boolean",
                        "description": "Include all logs if atleast one value in tx or log matches stream config"
                    },
                    "getNativeBalances": {
                        "items": {
                            "$ref": "#/components/schemas/getNativeBalances"
                        },
                        "type": "array",
                        "description": "Include native balances for each address in the webhook"
                    },
                    "abi": {
                        "type": "object",
                        "nullable": true
                    },
                    "advancedOptions": {
                        "items": {
                            "$ref": "#/components/schemas/advancedOptions"
                        },
                        "type": "array",
                        "nullable": true
                    },
                    "chainIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "description": "The ids of the chains for this stream in hex Ex: [\"0x1\",\"0x38\"]"
                    },
                    "demo": {
                        "type": "boolean",
                        "description": "Indicator if it is a demo stream"
                    },
                    "triggers": {
                        "items": {
                            "$ref": "#/components/schemas/StreamsTrigger"
                        },
                        "type": "array",
                        "nullable": true,
                        "description": "triggers"
                    },
                    "id": {
                        "$ref": "#/components/schemas/UUID",
                        "description": "The unique uuid of the stream"
                    },
                    "status": {
                        "$ref": "#/components/schemas/StreamsStatus",
                        "description": "The status of the stream."
                    },
                    "statusMessage": {
                        "type": "string",
                        "description": "Description of current status of stream."
                    }
                },
                "required": [
                    "webhookUrl",
                    "description",
                    "tag",
                    "chainIds",
                    "id",
                    "status",
                    "statusMessage"
                ],
                "type": "object",
                "additionalProperties": false
            },
            "streamsTypes.StreamsModelCreate": {
                "properties": {
                    "webhookUrl": {
                        "type": "string",
                        "description": "Webhook URL where moralis will send the POST request."
                    },
                    "description": {
                        "type": "string",
                        "description": "A description for this stream"
                    },
                    "tag": {
                        "type": "string",
                        "description": "A user-provided tag that will be send along the webhook, the user can use this tag to identify the specific stream if multiple streams are present"
                    },
                    "topic0": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "nullable": true,
                        "description": "An Array of topic0's in string-signature format ex: ['FunctionName(address,uint256)']"
                    },
                    "allAddresses": {
                        "type": "boolean",
                        "description": "Include events for all addresses (only applied when abi and topic0 is provided)"
                    },
                    "includeNativeTxs": {
                        "type": "boolean",
                        "description": "Include or not native transactions defaults to false"
                    },
                    "includeContractLogs": {
                        "type": "boolean",
                        "description": "Include or not logs of contract interactions defaults to false"
                    },
                    "includeInternalTxs": {
                        "type": "boolean",
                        "description": "Include or not include internal transactions defaults to false"
                    },
                    "includeAllTxLogs": {
                        "type": "boolean",
                        "description": "Include all logs if atleast one value in tx or log matches stream config"
                    },
                    "getNativeBalances": {
                        "items": {
                            "$ref": "#/components/schemas/getNativeBalances"
                        },
                        "type": "array",
                        "description": "Include native balances for each address in the webhook"
                    },
                    "abi": {
                        "type": "object",
                        "nullable": true
                    },
                    "advancedOptions": {
                        "items": {
                            "$ref": "#/components/schemas/advancedOptions"
                        },
                        "type": "array",
                        "nullable": true
                    },
                    "chainIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "description": "The ids of the chains for this stream in hex Ex: [\"0x1\",\"0x38\"]"
                    },
                    "demo": {
                        "type": "boolean",
                        "description": "Indicator if it is a demo stream"
                    },
                    "triggers": {
                        "items": {
                            "$ref": "#/components/schemas/StreamsTrigger"
                        },
                        "type": "array",
                        "nullable": true,
                        "description": "triggers"
                    }
                },
                "required": [
                    "webhookUrl",
                    "description",
                    "tag",
                    "chainIds"
                ],
                "type": "object",
                "additionalProperties": false
            },
            "Partial_streamsTypes.StreamsModelCreate_": {
                "properties": {
                    "webhookUrl": {
                        "type": "string",
                        "description": "Webhook URL where moralis will send the POST request."
                    },
                    "description": {
                        "type": "string",
                        "description": "A description for this stream"
                    },
                    "tag": {
                        "type": "string",
                        "description": "A user-provided tag that will be send along the webhook, the user can use this tag to identify the specific stream if multiple streams are present"
                    },
                    "topic0": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "nullable": true,
                        "description": "An Array of topic0's in string-signature format ex: ['FunctionName(address,uint256)']"
                    },
                    "allAddresses": {
                        "type": "boolean",
                        "description": "Include events for all addresses (only applied when abi and topic0 is provided)"
                    },
                    "includeNativeTxs": {
                        "type": "boolean",
                        "description": "Include or not native transactions defaults to false"
                    },
                    "includeContractLogs": {
                        "type": "boolean",
                        "description": "Include or not logs of contract interactions defaults to false"
                    },
                    "includeInternalTxs": {
                        "type": "boolean",
                        "description": "Include or not include internal transactions defaults to false"
                    },
                    "includeAllTxLogs": {
                        "type": "boolean",
                        "description": "Include all logs if atleast one value in tx or log matches stream config"
                    },
                    "getNativeBalances": {
                        "items": {
                            "$ref": "#/components/schemas/getNativeBalances"
                        },
                        "type": "array",
                        "description": "Include native balances for each address in the webhook"
                    },
                    "abi": {
                        "type": "object",
                        "nullable": true
                    },
                    "advancedOptions": {
                        "items": {
                            "$ref": "#/components/schemas/advancedOptions"
                        },
                        "type": "array",
                        "nullable": true
                    },
                    "chainIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "description": "The ids of the chains for this stream in hex Ex: [\"0x1\",\"0x38\"]"
                    },
                    "demo": {
                        "type": "boolean",
                        "description": "Indicator if it is a demo stream"
                    },
                    "triggers": {
                        "items": {
                            "$ref": "#/components/schemas/StreamsTrigger"
                        },
                        "type": "array",
                        "nullable": true,
                        "description": "triggers"
                    }
                },
                "type": "object",
                "description": "Make all properties in T optional"
            },
            "streamsTypes.StreamsStatusUpdate": {
                "properties": {
                    "status": {
                        "$ref": "#/components/schemas/StreamsStatus",
                        "description": "The status of the stream."
                    }
                },
                "required": [
                    "status"
                ],
                "type": "object",
                "additionalProperties": false
            },
            "Addresses": {
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "Address"
                    }
                },
                "required": [
                    "address"
                ],
                "type": "object",
                "additionalProperties": false
            },
            "addressesTypes.AddressesResponse": {
                "properties": {
                    "result": {
                        "items": {
                            "$ref": "#/components/schemas/Addresses"
                        },
                        "type": "array",
                        "description": "Array of project Streams"
                    },
                    "cursor": {
                        "type": "string",
                        "description": "Cursor for fetching next page"
                    },
                    "total": {
                        "type": "number",
                        "format": "double",
                        "description": "Total count of streams on the project"
                    }
                },
                "required": [
                    "result",
                    "total"
                ],
                "type": "object",
                "additionalProperties": false
            },
            "addressesTypes.UUID": {
                "type": "string",
                "format": "uuid",
                "description": "Stringified UUIDv4.\nSee [RFC 4112](https://tools.ietf.org/html/rfc4122)",
                "pattern": "[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}"
            },
            "addressesTypes.AddressResponse": {
                "properties": {
                    "streamId": {
                        "type": "string",
                        "description": "The streamId"
                    },
                    "address": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        ],
                        "description": "Address"
                    }
                },
                "required": [
                    "streamId",
                    "address"
                ],
                "type": "object",
                "additionalProperties": false
            },
            "addressesTypes.AddressesAdd": {
                "properties": {
                    "address": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        ],
                        "description": "The address or a list of addresses to be added to the Stream."
                    }
                },
                "required": [
                    "address"
                ],
                "type": "object",
                "additionalProperties": false
            },
            "addressesTypes.AddressesRemove": {
                "properties": {
                    "address": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        ],
                        "description": "The address or a list of addresses to be removed from the Stream."
                    }
                },
                "required": [
                    "address"
                ],
                "type": "object",
                "additionalProperties": false
            },
            "AptosNetwork": {
                "items": {
                    "type": "string",
                    "enum": [
                        "mainnet",
                        "testnet"
                    ]
                },
                "type": "array"
            },
            "AptosStreamType": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "allAddresses": {
                        "type": "boolean"
                    },
                    "demo": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "includeChanges": {
                        "type": "boolean"
                    },
                    "includeEvents": {
                        "type": "boolean"
                    },
                    "includePayload": {
                        "type": "boolean"
                    },
                    "isErrorSince": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "network": {
                        "$ref": "#/components/schemas/AptosNetwork"
                    },
                    "status": {
                        "$ref": "#/components/schemas/StreamsStatus"
                    },
                    "statusMessage": {
                        "type": "string"
                    },
                    "events": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "functions": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "tag": {
                        "type": "string"
                    },
                    "webhookUrl": {
                        "type": "string"
                    },
                    "amountOfAddresses": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "required": [
                    "id",
                    "allAddresses",
                    "demo",
                    "description",
                    "includeChanges",
                    "includeEvents",
                    "includePayload",
                    "isErrorSince",
                    "network",
                    "status",
                    "statusMessage",
                    "events",
                    "functions",
                    "tag",
                    "webhookUrl",
                    "amountOfAddresses"
                ],
                "type": "object",
                "additionalProperties": false
            },
            "AptosCreateStreamType": {
                "properties": {
                    "webhookUrl": {
                        "type": "string",
                        "description": "Webhook URL where moralis will send the POST request."
                    },
                    "tag": {
                        "type": "string",
                        "description": "A user-provided tag that will be send along the webhook, the user can use this tag to identify the specific stream if multiple streams are present"
                    },
                    "functions": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "description": "An Array of events in string-signature format ex: ['0x1::aptos_account::transfer']"
                    },
                    "events": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "description": "An Array of events in string-signature format ex: ['0x1::coin::WithdrawEvent']"
                    },
                    "network": {
                        "$ref": "#/components/schemas/AptosNetwork",
                        "description": "The network to listen to"
                    },
                    "includePayload": {
                        "type": "boolean",
                        "description": "Include or not payload for every transaction in webhook defaults to false"
                    },
                    "includeEvents": {
                        "type": "boolean",
                        "description": "Include or not events in webhook defaults to false"
                    },
                    "includeChanges": {
                        "type": "boolean",
                        "description": "Include or not raw changes for every transaction in webhook defaults to false"
                    },
                    "description": {
                        "type": "string",
                        "description": "A description for this stream"
                    },
                    "demo": {
                        "type": "boolean",
                        "description": "Indicator if it is a demo stream"
                    },
                    "allAddresses": {
                        "type": "boolean",
                        "description": "Include events for all addresses (only applied when at least one event or function is provided)"
                    }
                },
                "required": [
                    "webhookUrl",
                    "tag",
                    "network",
                    "description"
                ],
                "type": "object"
            },
            "Partial_AptosCreateStreamType_": {
                "properties": {
                    "allAddresses": {
                        "type": "boolean",
                        "description": "Include events for all addresses (only applied when at least one event or function is provided)"
                    },
                    "demo": {
                        "type": "boolean",
                        "description": "Indicator if it is a demo stream"
                    },
                    "description": {
                        "type": "string",
                        "description": "A description for this stream"
                    },
                    "includeChanges": {
                        "type": "boolean",
                        "description": "Include or not raw changes for every transaction in webhook defaults to false"
                    },
                    "includeEvents": {
                        "type": "boolean",
                        "description": "Include or not events in webhook defaults to false"
                    },
                    "includePayload": {
                        "type": "boolean",
                        "description": "Include or not payload for every transaction in webhook defaults to false"
                    },
                    "network": {
                        "$ref": "#/components/schemas/AptosNetwork",
                        "description": "The network to listen to"
                    },
                    "events": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "description": "An Array of events in string-signature format ex: ['0x1::coin::WithdrawEvent']"
                    },
                    "functions": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "description": "An Array of events in string-signature format ex: ['0x1::aptos_account::transfer']"
                    },
                    "tag": {
                        "type": "string",
                        "description": "A user-provided tag that will be send along the webhook, the user can use this tag to identify the specific stream if multiple streams are present"
                    },
                    "webhookUrl": {
                        "type": "string",
                        "description": "Webhook URL where moralis will send the POST request."
                    }
                },
                "type": "object",
                "description": "Make all properties in T optional"
            },
            "Pick_AptosStreamType.status-or-statusMessage_": {
                "properties": {
                    "status": {
                        "$ref": "#/components/schemas/StreamsStatus"
                    },
                    "statusMessage": {
                        "type": "string"
                    }
                },
                "required": [
                    "status",
                    "statusMessage"
                ],
                "type": "object",
                "description": "From T, pick a set of properties whose keys are in the union K"
            }
        },
        "securitySchemes": {
            "x-api-key": {
                "type": "apiKey",
                "name": "x-api-key",
                "in": "header"
            }
        }
    },
    "info": {
        "title": "Streams Api",
        "version": "1.0.0",
        "description": "API that provides access to Moralis Streams",
        "contact": {}
    },
    "openapi": "3.0.0",
    "paths": {
        "/history": {
            "get": {
                "operationId": "GetHistory",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/historyTypes.HistoryResponse"
                                }
                            }
                        }
                    }
                },
                "description": "Get all history",
                "summary": "Get history",
                "tags": [
                    "History"
                ],
                "security": [
                    {
                        "x-api-key": []
                    }
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "required": true,
                        "schema": {
                            "format": "double",
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "excludePayload",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "x-tag-sdk": "history"
            }
        },
        "/history/replay/{streamId}/{id}": {
            "post": {
                "operationId": "ReplayHistory",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/historyTypes.HistoryModel"
                                }
                            }
                        }
                    }
                },
                "description": "Replay a specific history.",
                "summary": "Replay history",
                "tags": [
                    "History"
                ],
                "security": [
                    {
                        "x-api-key": []
                    }
                ],
                "parameters": [
                    {
                        "description": "The id of the stream the history will be replayed",
                        "in": "path",
                        "name": "streamId",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/streamTypes.UUID"
                        }
                    },
                    {
                        "description": "The id of the history to replay",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/historyTypes.UUID"
                        }
                    }
                ],
                "x-tag-sdk": "history"
            }
        },
        "/history/logs": {
            "get": {
                "operationId": "GetLogs",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/historyTypes.IWebhookDeliveryLogsResponse"
                                }
                            }
                        }
                    }
                },
                "description": "get all failed logs",
                "summary": "Get logs",
                "tags": [
                    "History"
                ],
                "security": [
                    {
                        "x-api-key": []
                    }
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "required": true,
                        "schema": {
                            "format": "double",
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "x-tag-sdk": "logs"
            }
        },
        "/settings": {
            "post": {
                "operationId": "SetSettings",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/settingsTypes.SettingsModel"
                                }
                            }
                        }
                    }
                },
                "description": "Set the settings for the current project based on the project api-key.",
                "summary": "Set project settings",
                "tags": [
                    "Project"
                ],
                "security": [
                    {
                        "x-api-key": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/settingsTypes.SettingsModel"
                            }
                        }
                    }
                },
                "x-tag-sdk": "project"
            },
            "get": {
                "operationId": "GetSettings",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/settingsTypes.SettingsModel"
                                }
                            }
                        }
                    }
                },
                "description": "Get the settings for the current project based on the project api-key.",
                "summary": "Get project settings",
                "tags": [
                    "Project"
                ],
                "security": [
                    {
                        "x-api-key": []
                    }
                ],
                "parameters": [],
                "x-tag-sdk": "project"
            }
        },
        "/stats": {
            "get": {
                "operationId": "GetStats",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/usagestatsTypes.UsageStatsModel"
                                }
                            }
                        }
                    }
                },
                "description": "Get the global stats for the account.",
                "summary": "Get project stats",
                "tags": [
                    "Stats"
                ],
                "security": [
                    {
                        "x-api-key": []
                    }
                ],
                "parameters": [],
                "x-tag-sdk": "stats"
            }
        },
        "/stats/{streamId}": {
            "get": {
                "operationId": "GetStatsByStreamId",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/usagestatsTypes.UsageStatsModel"
                                }
                            }
                        }
                    }
                },
                "description": "Get the stats for the streamId specified",
                "summary": "Get project stats by Stream ID",
                "tags": [
                    "Stats"
                ],
                "security": [
                    {
                        "x-api-key": []
                    }
                ],
                "parameters": [
                    {
                        "description": "The id of the stream to get the stats",
                        "in": "path",
                        "name": "streamId",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/streamsTypes.UUID"
                        }
                    }
                ],
                "x-tag-sdk": "stats"
            }
        },
        "/streams/evm": {
            "get": {
                "operationId": "GetStreams",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/streamsTypes.StreamsResponse"
                                }
                            }
                        }
                    }
                },
                "description": "Get all the evm streams for the current project based on the project api-key.",
                "summary": "Get streams",
                "tags": [
                    "EVM Streams"
                ],
                "security": [
                    {
                        "x-api-key": []
                    }
                ],
                "parameters": [
                    {
                        "description": "Limit response results max value 100",
                        "in": "query",
                        "name": "limit",
                        "required": true,
                        "schema": {
                            "format": "double",
                            "type": "number"
                        }
                    },
                    {
                        "description": "Cursor for fetching next page",
                        "in": "query",
                        "name": "cursor",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "x-tag-sdk": "evm-streams"
            },
            "put": {
                "operationId": "CreateStream",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/streamsTypes.StreamsModel"
                                }
                            }
                        }
                    }
                },
                "description": "Creates a new evm stream.",
                "summary": "Create stream",
                "tags": [
                    "EVM Streams"
                ],
                "security": [
                    {
                        "x-api-key": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "description": "Provide a Stream Model",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/streamsTypes.StreamsModelCreate",
                                "description": "Provide a Stream Model"
                            }
                        }
                    }
                },
                "x-tag-sdk": "evm-streams"
            }
        },
        "/streams/evm/{id}": {
            "get": {
                "operationId": "GetStream",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/streamsTypes.StreamsModel"
                                }
                            }
                        }
                    }
                },
                "description": "Get a specific evm stream.",
                "summary": "Get a specific evm stream.",
                "tags": [
                    "EVM Streams"
                ],
                "security": [
                    {
                        "x-api-key": []
                    }
                ],
                "parameters": [
                    {
                        "description": "The id of the stream to get",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/streamsTypes.UUID"
                        }
                    }
                ],
                "x-tag-sdk": "evm-streams"
            },
            "post": {
                "operationId": "UpdateStream",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/streamsTypes.StreamsModel"
                                }
                            }
                        }
                    }
                },
                "description": "Updates a specific evm stream.",
                "summary": "Update stream",
                "tags": [
                    "EVM Streams"
                ],
                "security": [
                    {
                        "x-api-key": []
                    }
                ],
                "parameters": [
                    {
                        "description": "The id of the stream to update",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/streamsTypes.UUID"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Provide a Stream Model",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Partial_streamsTypes.StreamsModelCreate_",
                                "description": "Provide a Stream Model"
                            }
                        }
                    }
                },
                "x-tag-sdk": "evm-streams"
            },
            "delete": {
                "operationId": "DeleteStream",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/streamsTypes.StreamsModel"
                                }
                            }
                        }
                    }
                },
                "description": "Delete a specific evm stream.",
                "summary": "Delete stream",
                "tags": [
                    "EVM Streams"
                ],
                "security": [
                    {
                        "x-api-key": []
                    }
                ],
                "parameters": [
                    {
                        "description": "The id of the stream to delete",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/streamsTypes.UUID"
                        }
                    }
                ],
                "x-tag-sdk": "evm-streams"
            }
        },
        "/streams/evm/{id}/status": {
            "post": {
                "operationId": "UpdateStreamStatus",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/streamsTypes.StreamsModel"
                                }
                            }
                        }
                    }
                },
                "description": "Updates the status of specific evm stream.",
                "summary": "Update stream status",
                "tags": [
                    "EVM Streams"
                ],
                "security": [
                    {
                        "x-api-key": []
                    }
                ],
                "parameters": [
                    {
                        "description": "The id of the stream to update",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/streamsTypes.UUID"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Provide a Stream Model",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/streamsTypes.StreamsStatusUpdate",
                                "description": "Provide a Stream Model"
                            }
                        }
                    }
                },
                "x-tag-sdk": "evm-streams"
            }
        },
        "/streams/evm/{id}/address": {
            "get": {
                "operationId": "GetAddresses",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/addressesTypes.AddressesResponse"
                                }
                            }
                        }
                    }
                },
                "description": "Get all addresses associated with a specific stream.",
                "summary": "Get addresses by stream",
                "tags": [
                    "EVM Streams"
                ],
                "security": [
                    {
                        "x-api-key": []
                    }
                ],
                "parameters": [
                    {
                        "description": "the id of the stream to get the addresses from",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/addressesTypes.UUID"
                        }
                    },
                    {
                        "description": "Limit response results max value 100",
                        "in": "query",
                        "name": "limit",
                        "required": true,
                        "schema": {
                            "format": "double",
                            "type": "number"
                        }
                    },
                    {
                        "description": "Cursor for fetching next page",
                        "in": "query",
                        "name": "cursor",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "x-tag-sdk": "evm-streams"
            },
            "post": {
                "operationId": "AddAddressToStream",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/addressesTypes.AddressResponse"
                                }
                            }
                        }
                    }
                },
                "description": "Adds an address to a Stream.",
                "summary": "Add address to stream",
                "tags": [
                    "EVM Streams"
                ],
                "security": [
                    {
                        "x-api-key": []
                    }
                ],
                "parameters": [
                    {
                        "description": "The id of the stream to add the address to",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/streamsTypes.UUID"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Provide a Address Model",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/addressesTypes.AddressesAdd",
                                "description": "Provide a Address Model"
                            }
                        }
                    }
                },
                "x-tag-sdk": "evm-streams"
            },
            "delete": {
                "operationId": "DeleteAddressFromStream",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/addressesTypes.AddressResponse"
                                }
                            }
                        }
                    }
                },
                "description": "Deletes an address from a Stream.",
                "summary": "Delete address from stream",
                "tags": [
                    "EVM Streams"
                ],
                "security": [
                    {
                        "x-api-key": []
                    }
                ],
                "parameters": [
                    {
                        "description": "The id of the stream to delete the address from",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/streamsTypes.UUID"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Provide a Address Model",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/addressesTypes.AddressesRemove",
                                "description": "Provide a Address Model"
                            }
                        }
                    }
                },
                "x-tag-sdk": "evm-streams"
            }
        },
        "/streams/aptos": {
            "get": {
                "operationId": "aptosStreamsGetAll",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "total": {
                                            "type": "number",
                                            "format": "double"
                                        },
                                        "result": {
                                            "items": {
                                                "$ref": "#/components/schemas/AptosStreamType"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "total",
                                        "result"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "description": "Get all aptos streams.",
                "summary": "Gets all aptos streams.",
                "tags": [
                    "Aptos Streams"
                ],
                "security": [
                    {
                        "x-api-key": []
                    }
                ],
                "parameters": [
                    {
                        "description": "Limit response results max value 100",
                        "in": "query",
                        "name": "limit",
                        "required": true,
                        "schema": {
                            "format": "double",
                            "type": "number"
                        }
                    },
                    {
                        "description": "Cursor for fetching next page",
                        "in": "query",
                        "name": "cursor",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "x-tag-sdk": "aptos-streams"
            },
            "put": {
                "operationId": "aptosStreamsCreate",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AptosStreamType"
                                }
                            }
                        }
                    }
                },
                "description": "Creates a new aptos stream.",
                "summary": "Create stream",
                "tags": [
                    "Aptos Streams"
                ],
                "security": [
                    {
                        "x-api-key": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "description": "Provide a valid Aptos Stream Model",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AptosCreateStreamType",
                                "description": "Provide a valid Aptos Stream Model"
                            }
                        }
                    }
                },
                "x-tag-sdk": "aptos-streams"
            }
        },
        "/streams/aptos/{id}": {
            "get": {
                "operationId": "aptosStreamsGet",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AptosStreamType"
                                }
                            }
                        }
                    }
                },
                "description": "Get a specific aptos stream.",
                "summary": "Get a specific aptos stream.",
                "tags": [
                    "Aptos Streams"
                ],
                "security": [
                    {
                        "x-api-key": []
                    }
                ],
                "parameters": [
                    {
                        "description": "The id of the stream to get",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/streamsTypes.UUID"
                        }
                    }
                ],
                "x-tag-sdk": "aptos-streams"
            },
            "post": {
                "operationId": "aptosStreamsUpdate",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AptosStreamType"
                                }
                            }
                        }
                    }
                },
                "description": "Updates a new aptos stream.",
                "summary": "Update stream",
                "tags": [
                    "Aptos Streams"
                ],
                "security": [
                    {
                        "x-api-key": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Provide valid values of a Aptos Stream Model",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Partial_AptosCreateStreamType_",
                                "description": "Provide valid values of a Aptos Stream Model"
                            }
                        }
                    }
                },
                "x-tag-sdk": "aptos-streams"
            },
            "delete": {
                "operationId": "aptosStreamsDelete",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                },
                "description": "Deletes a aptos stream.",
                "summary": "Delete a stream",
                "tags": [
                    "Aptos Streams"
                ],
                "security": [
                    {
                        "x-api-key": []
                    }
                ],
                "parameters": [
                    {
                        "description": "the id of the aptos stream to delete",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "x-tag-sdk": "aptos-streams"
            }
        },
        "/streams/aptos/{id}/address": {
            "post": {
                "operationId": "aptosStreamsAddAddresses",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "address": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            ]
                                        },
                                        "streamId": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "address",
                                        "streamId"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "description": "Adds addresses to an existing aptos stream",
                "summary": "Add addresses to an aptos stream",
                "tags": [
                    "Aptos Streams"
                ],
                "security": [
                    {
                        "x-api-key": []
                    }
                ],
                "parameters": [
                    {
                        "description": "the id of the aptos stream to get the addresses from",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/streamsTypes.UUID"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "address": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            }
                                        ]
                                    }
                                },
                                "required": [
                                    "address"
                                ],
                                "type": "object"
                            }
                        }
                    }
                },
                "x-tag-sdk": "aptos-streams"
            },
            "delete": {
                "operationId": "aptosStreamsDeleteAddresses",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "address": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            ]
                                        },
                                        "streamId": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "address",
                                        "streamId"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "description": "Deletes addresses of an existing aptos stream",
                "summary": "Delete addresses of an aptos stream",
                "tags": [
                    "Aptos Streams"
                ],
                "security": [
                    {
                        "x-api-key": []
                    }
                ],
                "parameters": [
                    {
                        "description": "the id of the aptos stream to get the addresses from",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/streamsTypes.UUID"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Provide a list of valid Aptos addresses, or a single address",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "address": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            }
                                        ]
                                    }
                                },
                                "required": [
                                    "address"
                                ],
                                "type": "object",
                                "description": "Provide a list of valid Aptos addresses, or a single address"
                            }
                        }
                    }
                },
                "x-tag-sdk": "aptos-streams"
            },
            "get": {
                "operationId": "aptosStreamsGetAddresses",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "cursor": {
                                            "type": "string"
                                        },
                                        "total": {
                                            "type": "number",
                                            "format": "double"
                                        },
                                        "result": {
                                            "items": {
                                                "properties": {
                                                    "address": {
                                                        "anyOf": [
                                                            {
                                                                "type": "string"
                                                            },
                                                            {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            }
                                                        ]
                                                    }
                                                },
                                                "required": [
                                                    "address"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "total",
                                        "result"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "description": "Get all addresses associated with a specific aptos stream.",
                "summary": "Get addresses by aptos stream id",
                "tags": [
                    "Aptos Streams"
                ],
                "security": [
                    {
                        "x-api-key": []
                    }
                ],
                "parameters": [
                    {
                        "description": "the id of the aptos stream to get the addresses from",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/streamsTypes.UUID"
                        }
                    },
                    {
                        "description": "Limit response results max value 100",
                        "in": "query",
                        "name": "limit",
                        "required": true,
                        "schema": {
                            "format": "double",
                            "type": "number"
                        }
                    },
                    {
                        "description": "Cursor for fetching next page",
                        "in": "query",
                        "name": "cursor",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "x-tag-sdk": "aptos-streams"
            }
        },
        "/streams/aptos/{id}/status": {
            "post": {
                "operationId": "aptosStreamsUpdateStatus",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pick_AptosStreamType.status-or-statusMessage_"
                                }
                            }
                        }
                    }
                },
                "description": "Update a Stream Status",
                "summary": "Update a Stream Status",
                "tags": [
                    "Aptos Streams"
                ],
                "security": [
                    {
                        "x-api-key": []
                    }
                ],
                "parameters": [
                    {
                        "description": "the id of the aptos stream to update the status",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/streamsTypes.UUID"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Provide an object with the status to update can be 'active' or 'paused'",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/streamsTypes.StreamsStatusUpdate",
                                "description": "Provide an object with the status to update can be 'active' or 'paused'"
                            }
                        }
                    }
                },
                "x-tag-sdk": "aptos-streams"
            }
        }
    },
    "servers": [
        {
            "url": "https://api.moralis-streams.com"
        }
    ],
    "default": {
        "components": {
            "examples": {},
            "headers": {},
            "parameters": {},
            "requestBodies": {},
            "responses": {},
            "schemas": {
                "UUID": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Stringified UUIDv4.\nSee [RFC 4112](https://tools.ietf.org/html/rfc4122)",
                    "pattern": "[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}"
                },
                "Block": {
                    "properties": {
                        "number": {
                            "type": "string"
                        },
                        "hash": {
                            "type": "string"
                        },
                        "timestamp": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "number",
                        "hash",
                        "timestamp"
                    ],
                    "type": "object",
                    "additionalProperties": false
                },
                "TriggerOutput": {
                    "properties": {
                        "value": {},
                        "name": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "value",
                        "name"
                    ],
                    "type": "object"
                },
                "Log": {
                    "properties": {
                        "triggers": {
                            "items": {
                                "$ref": "#/components/schemas/TriggerOutput"
                            },
                            "type": "array"
                        },
                        "logIndex": {
                            "type": "string"
                        },
                        "transactionHash": {
                            "type": "string"
                        },
                        "address": {
                            "type": "string"
                        },
                        "data": {
                            "type": "string"
                        },
                        "topic0": {
                            "type": "string",
                            "nullable": true
                        },
                        "topic1": {
                            "type": "string",
                            "nullable": true
                        },
                        "topic2": {
                            "type": "string",
                            "nullable": true
                        },
                        "topic3": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "required": [
                        "logIndex",
                        "transactionHash",
                        "address",
                        "data",
                        "topic0",
                        "topic1",
                        "topic2",
                        "topic3"
                    ],
                    "type": "object",
                    "additionalProperties": false
                },
                "Transaction": {
                    "properties": {
                        "triggers": {
                            "items": {
                                "$ref": "#/components/schemas/TriggerOutput"
                            },
                            "type": "array"
                        },
                        "hash": {
                            "type": "string"
                        },
                        "gas": {
                            "type": "string",
                            "nullable": true
                        },
                        "gasPrice": {
                            "type": "string",
                            "nullable": true
                        },
                        "nonce": {
                            "type": "string",
                            "nullable": true
                        },
                        "input": {
                            "type": "string",
                            "nullable": true
                        },
                        "transactionIndex": {
                            "type": "string"
                        },
                        "fromAddress": {
                            "type": "string"
                        },
                        "toAddress": {
                            "type": "string",
                            "nullable": true
                        },
                        "value": {
                            "type": "string",
                            "nullable": true
                        },
                        "type": {
                            "type": "string",
                            "nullable": true
                        },
                        "v": {
                            "type": "string",
                            "nullable": true
                        },
                        "r": {
                            "type": "string",
                            "nullable": true
                        },
                        "s": {
                            "type": "string",
                            "nullable": true
                        },
                        "receiptCumulativeGasUsed": {
                            "type": "string",
                            "nullable": true
                        },
                        "receiptGasUsed": {
                            "type": "string",
                            "nullable": true
                        },
                        "receiptContractAddress": {
                            "type": "string",
                            "nullable": true
                        },
                        "receiptRoot": {
                            "type": "string",
                            "nullable": true
                        },
                        "receiptStatus": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "required": [
                        "hash",
                        "gas",
                        "gasPrice",
                        "nonce",
                        "input",
                        "transactionIndex",
                        "fromAddress",
                        "toAddress",
                        "value",
                        "type",
                        "v",
                        "r",
                        "s",
                        "receiptCumulativeGasUsed",
                        "receiptGasUsed",
                        "receiptContractAddress",
                        "receiptRoot",
                        "receiptStatus"
                    ],
                    "type": "object",
                    "additionalProperties": false
                },
                "InternalTransaction": {
                    "properties": {
                        "from": {
                            "type": "string",
                            "nullable": true
                        },
                        "to": {
                            "type": "string",
                            "nullable": true
                        },
                        "value": {
                            "type": "string",
                            "nullable": true
                        },
                        "transactionHash": {
                            "type": "string"
                        },
                        "gas": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "required": [
                        "from",
                        "to",
                        "value",
                        "transactionHash",
                        "gas"
                    ],
                    "type": "object",
                    "additionalProperties": false
                },
                "AbiInput": {
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string"
                        },
                        "indexed": {
                            "type": "boolean"
                        },
                        "components": {
                            "items": {
                                "$ref": "#/components/schemas/AbiInput"
                            },
                            "type": "array"
                        },
                        "internalType": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "name",
                        "type"
                    ],
                    "type": "object",
                    "additionalProperties": false
                },
                "AbiOutput": {
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string"
                        },
                        "components": {
                            "items": {
                                "$ref": "#/components/schemas/AbiOutput"
                            },
                            "type": "array"
                        },
                        "internalType": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "name",
                        "type"
                    ],
                    "type": "object",
                    "additionalProperties": false
                },
                "AbiItem": {
                    "description": "The abi to parse the log object of the contract",
                    "properties": {
                        "anonymous": {
                            "type": "boolean"
                        },
                        "constant": {
                            "type": "boolean"
                        },
                        "inputs": {
                            "items": {
                                "$ref": "#/components/schemas/AbiInput"
                            },
                            "type": "array"
                        },
                        "name": {
                            "type": "string"
                        },
                        "outputs": {
                            "items": {
                                "$ref": "#/components/schemas/AbiOutput"
                            },
                            "type": "array"
                        },
                        "payable": {
                            "type": "boolean"
                        },
                        "stateMutability": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string"
                        },
                        "gas": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    "required": [
                        "type"
                    ],
                    "type": "object",
                    "additionalProperties": false,
                    "example": {}
                },
                "webhookTypes.IWebhookUnParsed": {
                    "properties": {
                        "block": {
                            "$ref": "#/components/schemas/Block"
                        },
                        "chainId": {
                            "type": "string"
                        },
                        "logs": {
                            "items": {
                                "$ref": "#/components/schemas/Log"
                            },
                            "type": "array"
                        },
                        "txs": {
                            "items": {
                                "$ref": "#/components/schemas/Transaction"
                            },
                            "type": "array"
                        },
                        "txsInternal": {
                            "items": {
                                "$ref": "#/components/schemas/InternalTransaction"
                            },
                            "type": "array"
                        },
                        "abi": {
                            "items": {
                                "$ref": "#/components/schemas/AbiItem"
                            },
                            "type": "array"
                        },
                        "retries": {
                            "type": "number",
                            "format": "double"
                        },
                        "confirmed": {
                            "type": "boolean"
                        },
                        "tag": {
                            "type": "string"
                        },
                        "streamId": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "block",
                        "chainId",
                        "logs",
                        "txs",
                        "txsInternal",
                        "abi",
                        "retries",
                        "confirmed",
                        "tag",
                        "streamId"
                    ],
                    "type": "object",
                    "additionalProperties": false
                },
                "AptosBlock": {
                    "properties": {
                        "lastVersion": {
                            "type": "string"
                        },
                        "firstVersion": {
                            "type": "string"
                        },
                        "hash": {
                            "type": "string"
                        },
                        "timestamp": {
                            "type": "string"
                        },
                        "number": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "lastVersion",
                        "firstVersion",
                        "hash",
                        "timestamp",
                        "number"
                    ],
                    "type": "object"
                },
                "AptosCoin": {
                    "properties": {
                        "symbol": {
                            "type": "string"
                        },
                        "decimals": {
                            "type": "number",
                            "format": "double"
                        },
                        "name": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "symbol",
                        "decimals",
                        "name"
                    ],
                    "type": "object"
                },
                "AptosCoinDeposit": {
                    "properties": {
                        "txHash": {
                            "type": "string"
                        },
                        "sequenceNumber": {
                            "type": "string"
                        },
                        "valueWithDecimals": {
                            "type": "string"
                        },
                        "coin": {
                            "$ref": "#/components/schemas/AptosCoin"
                        },
                        "address": {
                            "type": "string"
                        },
                        "value": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "txHash",
                        "sequenceNumber",
                        "valueWithDecimals",
                        "coin",
                        "address",
                        "value"
                    ],
                    "type": "object"
                },
                "AptosCoinTransfer": {
                    "properties": {
                        "txHash": {
                            "type": "string"
                        },
                        "transaction": {
                            "type": "string"
                        },
                        "valueWithDecimals": {
                            "type": "number",
                            "format": "double"
                        },
                        "from": {
                            "type": "string"
                        },
                        "value": {
                            "type": "string"
                        },
                        "to": {
                            "type": "string"
                        },
                        "coin": {
                            "$ref": "#/components/schemas/AptosCoin"
                        }
                    },
                    "required": [
                        "txHash",
                        "transaction",
                        "valueWithDecimals",
                        "from",
                        "value",
                        "to",
                        "coin"
                    ],
                    "type": "object"
                },
                "AptosCoinWithdrawal": {
                    "properties": {
                        "txHash": {
                            "type": "string"
                        },
                        "sequenceNumber": {
                            "type": "string"
                        },
                        "valueWithDecimals": {
                            "type": "string"
                        },
                        "coin": {
                            "$ref": "#/components/schemas/AptosCoin"
                        },
                        "address": {
                            "type": "string"
                        },
                        "value": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "txHash",
                        "sequenceNumber",
                        "valueWithDecimals",
                        "coin",
                        "address",
                        "value"
                    ],
                    "type": "object"
                },
                "AptosTransaction": {
                    "properties": {
                        "gasUnitPrice": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string"
                        },
                        "gasUsed": {
                            "type": "string"
                        },
                        "eventChangeHash": {
                            "type": "string"
                        },
                        "stateChangeHash": {
                            "type": "string"
                        },
                        "gasLimit": {
                            "type": "string"
                        },
                        "sender": {
                            "type": "string"
                        },
                        "success": {
                            "type": "boolean"
                        },
                        "hash": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "gasUnitPrice",
                        "type",
                        "gasUsed",
                        "eventChangeHash",
                        "stateChangeHash",
                        "gasLimit",
                        "sender",
                        "success",
                        "hash"
                    ],
                    "type": "object"
                },
                "webhookTypes.AptosWebhook": {
                    "properties": {
                        "block": {
                            "$ref": "#/components/schemas/AptosBlock"
                        },
                        "changes": {
                            "items": {
                                "properties": {
                                    "txHash": {
                                        "type": "string"
                                    }
                                },
                                "additionalProperties": {},
                                "required": [
                                    "txHash"
                                ],
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "coinDeposits": {
                            "items": {
                                "$ref": "#/components/schemas/AptosCoinDeposit"
                            },
                            "type": "array"
                        },
                        "coinTransfers": {
                            "items": {
                                "$ref": "#/components/schemas/AptosCoinTransfer"
                            },
                            "type": "array"
                        },
                        "coinWithdrawals": {
                            "items": {
                                "$ref": "#/components/schemas/AptosCoinWithdrawal"
                            },
                            "type": "array"
                        },
                        "events": {
                            "items": {
                                "properties": {
                                    "txHash": {
                                        "type": "string"
                                    }
                                },
                                "additionalProperties": {},
                                "required": [
                                    "txHash"
                                ],
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "network": {
                            "type": "string",
                            "enum": [
                                "mainnet",
                                "testnet"
                            ]
                        },
                        "payloads": {
                            "items": {
                                "properties": {
                                    "txHash": {
                                        "type": "string"
                                    }
                                },
                                "additionalProperties": {},
                                "required": [
                                    "txHash"
                                ],
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "retries": {
                            "type": "number",
                            "format": "double"
                        },
                        "streamId": {
                            "type": "string"
                        },
                        "tag": {
                            "type": "string"
                        },
                        "transactions": {
                            "items": {
                                "$ref": "#/components/schemas/AptosTransaction"
                            },
                            "type": "array"
                        }
                    },
                    "required": [
                        "block",
                        "changes",
                        "coinDeposits",
                        "coinTransfers",
                        "coinWithdrawals",
                        "events",
                        "network",
                        "payloads",
                        "retries",
                        "streamId",
                        "tag",
                        "transactions"
                    ],
                    "type": "object",
                    "additionalProperties": false
                },
                "webhookTypes.ITinyPayload": {
                    "properties": {
                        "chainId": {
                            "type": "string"
                        },
                        "confirmed": {
                            "type": "boolean"
                        },
                        "block": {
                            "type": "string"
                        },
                        "records": {
                            "type": "number",
                            "format": "double"
                        },
                        "retries": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    "required": [
                        "chainId",
                        "confirmed",
                        "block",
                        "records",
                        "retries"
                    ],
                    "type": "object",
                    "additionalProperties": false
                },
                "HistoryModel": {
                    "properties": {
                        "id": {
                            "$ref": "#/components/schemas/UUID"
                        },
                        "date": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "payload": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/webhookTypes.IWebhookUnParsed"
                                },
                                {
                                    "$ref": "#/components/schemas/webhookTypes.AptosWebhook"
                                }
                            ]
                        },
                        "tinyPayload": {
                            "$ref": "#/components/schemas/webhookTypes.ITinyPayload"
                        },
                        "errorMessage": {
                            "type": "string"
                        },
                        "webhookUrl": {
                            "type": "string"
                        },
                        "streamId": {
                            "type": "string"
                        },
                        "tag": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "id",
                        "date",
                        "tinyPayload",
                        "errorMessage",
                        "webhookUrl",
                        "streamId",
                        "tag"
                    ],
                    "type": "object",
                    "additionalProperties": false
                },
                "historyTypes.HistoryResponse": {
                    "properties": {
                        "result": {
                            "items": {
                                "$ref": "#/components/schemas/HistoryModel"
                            },
                            "type": "array"
                        },
                        "cursor": {
                            "type": "string"
                        },
                        "total": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    "required": [
                        "result",
                        "total"
                    ],
                    "type": "object",
                    "additionalProperties": false
                },
                "historyTypes.HistoryModel": {
                    "properties": {
                        "id": {
                            "$ref": "#/components/schemas/UUID"
                        },
                        "date": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "payload": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/webhookTypes.IWebhookUnParsed"
                                },
                                {
                                    "$ref": "#/components/schemas/webhookTypes.AptosWebhook"
                                }
                            ]
                        },
                        "tinyPayload": {
                            "$ref": "#/components/schemas/webhookTypes.ITinyPayload"
                        },
                        "errorMessage": {
                            "type": "string"
                        },
                        "webhookUrl": {
                            "type": "string"
                        },
                        "streamId": {
                            "type": "string"
                        },
                        "tag": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "id",
                        "date",
                        "tinyPayload",
                        "errorMessage",
                        "webhookUrl",
                        "streamId",
                        "tag"
                    ],
                    "type": "object",
                    "additionalProperties": false
                },
                "streamTypes.UUID": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Stringified UUIDv4.\nSee [RFC 4112](https://tools.ietf.org/html/rfc4122)",
                    "pattern": "[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}"
                },
                "historyTypes.UUID": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Stringified UUIDv4.\nSee [RFC 4112](https://tools.ietf.org/html/rfc4122)",
                    "pattern": "[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}"
                },
                "IWebhookDeliveryLogsModel": {
                    "properties": {
                        "id": {
                            "$ref": "#/components/schemas/UUID"
                        },
                        "streamId": {
                            "type": "string"
                        },
                        "chain": {
                            "type": "string"
                        },
                        "webhookUrl": {
                            "type": "string"
                        },
                        "tag": {
                            "type": "string"
                        },
                        "retries": {
                            "type": "number",
                            "format": "double"
                        },
                        "deliveryStatus": {
                            "type": "string",
                            "enum": [
                                "failed",
                                "success"
                            ]
                        },
                        "blockNumber": {
                            "type": "number",
                            "format": "double"
                        },
                        "errorMessage": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "evm",
                                "aptos"
                            ]
                        },
                        "createdAt": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    "required": [
                        "id",
                        "streamId",
                        "chain",
                        "webhookUrl",
                        "tag",
                        "retries",
                        "deliveryStatus",
                        "blockNumber",
                        "errorMessage",
                        "type",
                        "createdAt"
                    ],
                    "type": "object",
                    "additionalProperties": false
                },
                "historyTypes.IWebhookDeliveryLogsResponse": {
                    "properties": {
                        "result": {
                            "items": {
                                "$ref": "#/components/schemas/IWebhookDeliveryLogsModel"
                            },
                            "type": "array"
                        },
                        "cursor": {
                            "type": "string"
                        },
                        "total": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    "required": [
                        "result",
                        "total"
                    ],
                    "type": "object",
                    "additionalProperties": false
                },
                "SettingsRegion": {
                    "enum": [
                        "us-east-1",
                        "us-west-2",
                        "eu-central-1",
                        "ap-southeast-1"
                    ],
                    "type": "string"
                },
                "settingsTypes.SettingsModel": {
                    "properties": {
                        "region": {
                            "$ref": "#/components/schemas/SettingsRegion",
                            "description": "The region from where all the webhooks will be posted for this project"
                        },
                        "secretKey": {
                            "type": "string",
                            "description": "The secret key to validate the webhooks"
                        }
                    },
                    "type": "object",
                    "additionalProperties": false
                },
                "UsageStatsStreams": {
                    "properties": {
                        "totalWebhooksDelivered": {
                            "type": "number",
                            "format": "double",
                            "description": "The total amount of webhooks delivered across all streams"
                        },
                        "totalWebhooksFailed": {
                            "type": "number",
                            "format": "double",
                            "description": "The total amount of failed webhooks across all streams"
                        },
                        "totalLogsProcessed": {
                            "type": "number",
                            "format": "double",
                            "description": "The total amount of logs processed across all streams, this includes failed webhooks"
                        },
                        "totalTxsProcessed": {
                            "type": "number",
                            "format": "double",
                            "description": "The total amount of txs processed across all streams, this includes failed webhooks"
                        },
                        "totalTxsInternalProcessed": {
                            "type": "number",
                            "format": "double",
                            "description": "The total amount of internal txs processed across all streams, this includes failed webhooks"
                        },
                        "streamId": {
                            "type": "string",
                            "description": "The stream id"
                        }
                    },
                    "required": [
                        "totalWebhooksDelivered",
                        "totalWebhooksFailed",
                        "totalLogsProcessed",
                        "totalTxsProcessed",
                        "totalTxsInternalProcessed",
                        "streamId"
                    ],
                    "type": "object",
                    "additionalProperties": false
                },
                "usagestatsTypes.UsageStatsModel": {
                    "properties": {
                        "totalWebhooksDelivered": {
                            "type": "number",
                            "format": "double",
                            "description": "The total amount of webhooks delivered across all streams"
                        },
                        "totalWebhooksFailed": {
                            "type": "number",
                            "format": "double",
                            "description": "The total amount of failed webhooks across all streams"
                        },
                        "totalLogsProcessed": {
                            "type": "number",
                            "format": "double",
                            "description": "The total amount of logs processed across all streams, this includes failed webhooks"
                        },
                        "totalTxsProcessed": {
                            "type": "number",
                            "format": "double",
                            "description": "The total amount of txs processed across all streams, this includes failed webhooks"
                        },
                        "totalTxsInternalProcessed": {
                            "type": "number",
                            "format": "double",
                            "description": "The total amount of internal txs processed across all streams, this includes failed webhooks"
                        },
                        "streams": {
                            "items": {
                                "$ref": "#/components/schemas/UsageStatsStreams"
                            },
                            "type": "array",
                            "description": "Array of stream stats"
                        },
                        "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The date since this stats are being counted"
                        },
                        "updatedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The date since this stats were last updated"
                        }
                    },
                    "required": [
                        "totalWebhooksDelivered",
                        "totalWebhooksFailed",
                        "totalLogsProcessed",
                        "totalTxsProcessed",
                        "totalTxsInternalProcessed"
                    ],
                    "type": "object",
                    "additionalProperties": false
                },
                "streamsTypes.UUID": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Stringified UUIDv4.\nSee [RFC 4112](https://tools.ietf.org/html/rfc4122)",
                    "pattern": "[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}"
                },
                "StreamsStatus": {
                    "description": "The stream status:\n[active] The Stream is healthy and processing blocks\n[paused] The Stream is paused and is not processing blocks\n[error] The Stream has encountered an error and is not processing blocks",
                    "enum": [
                        "active",
                        "paused",
                        "error",
                        "terminated"
                    ],
                    "type": "string"
                },
                "getNativeBalances": {
                    "properties": {
                        "selectors": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "tx",
                                "log",
                                "erc20transfer",
                                "erc20approval",
                                "nfttransfer",
                                "internalTx"
                            ]
                        }
                    },
                    "required": [
                        "selectors",
                        "type"
                    ],
                    "type": "object",
                    "additionalProperties": false
                },
                "StreamsFilter": {
                    "description": "The filter object for the topic0\nhttps://docs.moralis.io/docs/filter-streams",
                    "properties": {},
                    "type": "object",
                    "additionalProperties": {},
                    "example": {}
                },
                "advancedOptions": {
                    "description": "Advanced Options for each specific topic",
                    "properties": {
                        "topic0": {
                            "type": "string"
                        },
                        "filter": {
                            "$ref": "#/components/schemas/StreamsFilter"
                        },
                        "includeNativeTxs": {
                            "type": "boolean"
                        }
                    },
                    "required": [
                        "topic0"
                    ],
                    "type": "object",
                    "additionalProperties": false
                },
                "StreamsTrigger": {
                    "description": "Trigger",
                    "properties": {
                        "type": {
                            "type": "string",
                            "enum": [
                                "tx",
                                "log",
                                "erc20transfer",
                                "erc20approval",
                                "nfttransfer"
                            ]
                        },
                        "contractAddress": {
                            "type": "string"
                        },
                        "inputs": {
                            "items": {
                                "anyOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "items": {},
                                        "type": "array"
                                    }
                                ]
                            },
                            "type": "array"
                        },
                        "functionAbi": {
                            "$ref": "#/components/schemas/AbiItem"
                        },
                        "topic0": {
                            "type": "string"
                        },
                        "callFrom": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "type",
                        "contractAddress",
                        "functionAbi"
                    ],
                    "type": "object",
                    "additionalProperties": false
                },
                "StreamsModel": {
                    "properties": {
                        "webhookUrl": {
                            "type": "string",
                            "description": "Webhook URL where moralis will send the POST request."
                        },
                        "description": {
                            "type": "string",
                            "description": "A description for this stream"
                        },
                        "tag": {
                            "type": "string",
                            "description": "A user-provided tag that will be send along the webhook, the user can use this tag to identify the specific stream if multiple streams are present"
                        },
                        "topic0": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array",
                            "nullable": true,
                            "description": "An Array of topic0's in string-signature format ex: ['FunctionName(address,uint256)']"
                        },
                        "allAddresses": {
                            "type": "boolean",
                            "description": "Include events for all addresses (only applied when abi and topic0 is provided)"
                        },
                        "includeNativeTxs": {
                            "type": "boolean",
                            "description": "Include or not native transactions defaults to false"
                        },
                        "includeContractLogs": {
                            "type": "boolean",
                            "description": "Include or not logs of contract interactions defaults to false"
                        },
                        "includeInternalTxs": {
                            "type": "boolean",
                            "description": "Include or not include internal transactions defaults to false"
                        },
                        "includeAllTxLogs": {
                            "type": "boolean",
                            "description": "Include all logs if atleast one value in tx or log matches stream config"
                        },
                        "getNativeBalances": {
                            "items": {
                                "$ref": "#/components/schemas/getNativeBalances"
                            },
                            "type": "array",
                            "description": "Include native balances for each address in the webhook"
                        },
                        "abi": {
                            "type": "object",
                            "nullable": true
                        },
                        "advancedOptions": {
                            "items": {
                                "$ref": "#/components/schemas/advancedOptions"
                            },
                            "type": "array",
                            "nullable": true
                        },
                        "chainIds": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array",
                            "description": "The ids of the chains for this stream in hex Ex: [\"0x1\",\"0x38\"]"
                        },
                        "demo": {
                            "type": "boolean",
                            "description": "Indicator if it is a demo stream"
                        },
                        "triggers": {
                            "items": {
                                "$ref": "#/components/schemas/StreamsTrigger"
                            },
                            "type": "array",
                            "nullable": true,
                            "description": "triggers"
                        },
                        "id": {
                            "$ref": "#/components/schemas/UUID",
                            "description": "The unique uuid of the stream"
                        },
                        "status": {
                            "$ref": "#/components/schemas/StreamsStatus",
                            "description": "The status of the stream."
                        },
                        "statusMessage": {
                            "type": "string",
                            "description": "Description of current status of stream."
                        }
                    },
                    "required": [
                        "webhookUrl",
                        "description",
                        "tag",
                        "chainIds",
                        "id",
                        "status",
                        "statusMessage"
                    ],
                    "type": "object",
                    "additionalProperties": false
                },
                "streamsTypes.StreamsResponse": {
                    "properties": {
                        "result": {
                            "items": {
                                "$ref": "#/components/schemas/StreamsModel"
                            },
                            "type": "array",
                            "description": "Array of project Streams"
                        },
                        "cursor": {
                            "type": "string",
                            "description": "Cursor for fetching next page"
                        },
                        "total": {
                            "type": "number",
                            "format": "double",
                            "description": "Total count of streams on the project"
                        }
                    },
                    "required": [
                        "result",
                        "total"
                    ],
                    "type": "object",
                    "additionalProperties": false
                },
                "streamsTypes.StreamsModel": {
                    "properties": {
                        "webhookUrl": {
                            "type": "string",
                            "description": "Webhook URL where moralis will send the POST request."
                        },
                        "description": {
                            "type": "string",
                            "description": "A description for this stream"
                        },
                        "tag": {
                            "type": "string",
                            "description": "A user-provided tag that will be send along the webhook, the user can use this tag to identify the specific stream if multiple streams are present"
                        },
                        "topic0": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array",
                            "nullable": true,
                            "description": "An Array of topic0's in string-signature format ex: ['FunctionName(address,uint256)']"
                        },
                        "allAddresses": {
                            "type": "boolean",
                            "description": "Include events for all addresses (only applied when abi and topic0 is provided)"
                        },
                        "includeNativeTxs": {
                            "type": "boolean",
                            "description": "Include or not native transactions defaults to false"
                        },
                        "includeContractLogs": {
                            "type": "boolean",
                            "description": "Include or not logs of contract interactions defaults to false"
                        },
                        "includeInternalTxs": {
                            "type": "boolean",
                            "description": "Include or not include internal transactions defaults to false"
                        },
                        "includeAllTxLogs": {
                            "type": "boolean",
                            "description": "Include all logs if atleast one value in tx or log matches stream config"
                        },
                        "getNativeBalances": {
                            "items": {
                                "$ref": "#/components/schemas/getNativeBalances"
                            },
                            "type": "array",
                            "description": "Include native balances for each address in the webhook"
                        },
                        "abi": {
                            "type": "object",
                            "nullable": true
                        },
                        "advancedOptions": {
                            "items": {
                                "$ref": "#/components/schemas/advancedOptions"
                            },
                            "type": "array",
                            "nullable": true
                        },
                        "chainIds": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array",
                            "description": "The ids of the chains for this stream in hex Ex: [\"0x1\",\"0x38\"]"
                        },
                        "demo": {
                            "type": "boolean",
                            "description": "Indicator if it is a demo stream"
                        },
                        "triggers": {
                            "items": {
                                "$ref": "#/components/schemas/StreamsTrigger"
                            },
                            "type": "array",
                            "nullable": true,
                            "description": "triggers"
                        },
                        "id": {
                            "$ref": "#/components/schemas/UUID",
                            "description": "The unique uuid of the stream"
                        },
                        "status": {
                            "$ref": "#/components/schemas/StreamsStatus",
                            "description": "The status of the stream."
                        },
                        "statusMessage": {
                            "type": "string",
                            "description": "Description of current status of stream."
                        }
                    },
                    "required": [
                        "webhookUrl",
                        "description",
                        "tag",
                        "chainIds",
                        "id",
                        "status",
                        "statusMessage"
                    ],
                    "type": "object",
                    "additionalProperties": false
                },
                "streamsTypes.StreamsModelCreate": {
                    "properties": {
                        "webhookUrl": {
                            "type": "string",
                            "description": "Webhook URL where moralis will send the POST request."
                        },
                        "description": {
                            "type": "string",
                            "description": "A description for this stream"
                        },
                        "tag": {
                            "type": "string",
                            "description": "A user-provided tag that will be send along the webhook, the user can use this tag to identify the specific stream if multiple streams are present"
                        },
                        "topic0": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array",
                            "nullable": true,
                            "description": "An Array of topic0's in string-signature format ex: ['FunctionName(address,uint256)']"
                        },
                        "allAddresses": {
                            "type": "boolean",
                            "description": "Include events for all addresses (only applied when abi and topic0 is provided)"
                        },
                        "includeNativeTxs": {
                            "type": "boolean",
                            "description": "Include or not native transactions defaults to false"
                        },
                        "includeContractLogs": {
                            "type": "boolean",
                            "description": "Include or not logs of contract interactions defaults to false"
                        },
                        "includeInternalTxs": {
                            "type": "boolean",
                            "description": "Include or not include internal transactions defaults to false"
                        },
                        "includeAllTxLogs": {
                            "type": "boolean",
                            "description": "Include all logs if atleast one value in tx or log matches stream config"
                        },
                        "getNativeBalances": {
                            "items": {
                                "$ref": "#/components/schemas/getNativeBalances"
                            },
                            "type": "array",
                            "description": "Include native balances for each address in the webhook"
                        },
                        "abi": {
                            "type": "object",
                            "nullable": true
                        },
                        "advancedOptions": {
                            "items": {
                                "$ref": "#/components/schemas/advancedOptions"
                            },
                            "type": "array",
                            "nullable": true
                        },
                        "chainIds": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array",
                            "description": "The ids of the chains for this stream in hex Ex: [\"0x1\",\"0x38\"]"
                        },
                        "demo": {
                            "type": "boolean",
                            "description": "Indicator if it is a demo stream"
                        },
                        "triggers": {
                            "items": {
                                "$ref": "#/components/schemas/StreamsTrigger"
                            },
                            "type": "array",
                            "nullable": true,
                            "description": "triggers"
                        }
                    },
                    "required": [
                        "webhookUrl",
                        "description",
                        "tag",
                        "chainIds"
                    ],
                    "type": "object",
                    "additionalProperties": false
                },
                "Partial_streamsTypes.StreamsModelCreate_": {
                    "properties": {
                        "webhookUrl": {
                            "type": "string",
                            "description": "Webhook URL where moralis will send the POST request."
                        },
                        "description": {
                            "type": "string",
                            "description": "A description for this stream"
                        },
                        "tag": {
                            "type": "string",
                            "description": "A user-provided tag that will be send along the webhook, the user can use this tag to identify the specific stream if multiple streams are present"
                        },
                        "topic0": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array",
                            "nullable": true,
                            "description": "An Array of topic0's in string-signature format ex: ['FunctionName(address,uint256)']"
                        },
                        "allAddresses": {
                            "type": "boolean",
                            "description": "Include events for all addresses (only applied when abi and topic0 is provided)"
                        },
                        "includeNativeTxs": {
                            "type": "boolean",
                            "description": "Include or not native transactions defaults to false"
                        },
                        "includeContractLogs": {
                            "type": "boolean",
                            "description": "Include or not logs of contract interactions defaults to false"
                        },
                        "includeInternalTxs": {
                            "type": "boolean",
                            "description": "Include or not include internal transactions defaults to false"
                        },
                        "includeAllTxLogs": {
                            "type": "boolean",
                            "description": "Include all logs if atleast one value in tx or log matches stream config"
                        },
                        "getNativeBalances": {
                            "items": {
                                "$ref": "#/components/schemas/getNativeBalances"
                            },
                            "type": "array",
                            "description": "Include native balances for each address in the webhook"
                        },
                        "abi": {
                            "type": "object",
                            "nullable": true
                        },
                        "advancedOptions": {
                            "items": {
                                "$ref": "#/components/schemas/advancedOptions"
                            },
                            "type": "array",
                            "nullable": true
                        },
                        "chainIds": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array",
                            "description": "The ids of the chains for this stream in hex Ex: [\"0x1\",\"0x38\"]"
                        },
                        "demo": {
                            "type": "boolean",
                            "description": "Indicator if it is a demo stream"
                        },
                        "triggers": {
                            "items": {
                                "$ref": "#/components/schemas/StreamsTrigger"
                            },
                            "type": "array",
                            "nullable": true,
                            "description": "triggers"
                        }
                    },
                    "type": "object",
                    "description": "Make all properties in T optional"
                },
                "streamsTypes.StreamsStatusUpdate": {
                    "properties": {
                        "status": {
                            "$ref": "#/components/schemas/StreamsStatus",
                            "description": "The status of the stream."
                        }
                    },
                    "required": [
                        "status"
                    ],
                    "type": "object",
                    "additionalProperties": false
                },
                "Addresses": {
                    "properties": {
                        "address": {
                            "type": "string",
                            "description": "Address"
                        }
                    },
                    "required": [
                        "address"
                    ],
                    "type": "object",
                    "additionalProperties": false
                },
                "addressesTypes.AddressesResponse": {
                    "properties": {
                        "result": {
                            "items": {
                                "$ref": "#/components/schemas/Addresses"
                            },
                            "type": "array",
                            "description": "Array of project Streams"
                        },
                        "cursor": {
                            "type": "string",
                            "description": "Cursor for fetching next page"
                        },
                        "total": {
                            "type": "number",
                            "format": "double",
                            "description": "Total count of streams on the project"
                        }
                    },
                    "required": [
                        "result",
                        "total"
                    ],
                    "type": "object",
                    "additionalProperties": false
                },
                "addressesTypes.UUID": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Stringified UUIDv4.\nSee [RFC 4112](https://tools.ietf.org/html/rfc4122)",
                    "pattern": "[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}"
                },
                "addressesTypes.AddressResponse": {
                    "properties": {
                        "streamId": {
                            "type": "string",
                            "description": "The streamId"
                        },
                        "address": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            ],
                            "description": "Address"
                        }
                    },
                    "required": [
                        "streamId",
                        "address"
                    ],
                    "type": "object",
                    "additionalProperties": false
                },
                "addressesTypes.AddressesAdd": {
                    "properties": {
                        "address": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            ],
                            "description": "The address or a list of addresses to be added to the Stream."
                        }
                    },
                    "required": [
                        "address"
                    ],
                    "type": "object",
                    "additionalProperties": false
                },
                "addressesTypes.AddressesRemove": {
                    "properties": {
                        "address": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            ],
                            "description": "The address or a list of addresses to be removed from the Stream."
                        }
                    },
                    "required": [
                        "address"
                    ],
                    "type": "object",
                    "additionalProperties": false
                },
                "AptosNetwork": {
                    "items": {
                        "type": "string",
                        "enum": [
                            "mainnet",
                            "testnet"
                        ]
                    },
                    "type": "array"
                },
                "AptosStreamType": {
                    "properties": {
                        "id": {
                            "type": "string"
                        },
                        "allAddresses": {
                            "type": "boolean"
                        },
                        "demo": {
                            "type": "boolean"
                        },
                        "description": {
                            "type": "string"
                        },
                        "includeChanges": {
                            "type": "boolean"
                        },
                        "includeEvents": {
                            "type": "boolean"
                        },
                        "includePayload": {
                            "type": "boolean"
                        },
                        "isErrorSince": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        },
                        "network": {
                            "$ref": "#/components/schemas/AptosNetwork"
                        },
                        "status": {
                            "$ref": "#/components/schemas/StreamsStatus"
                        },
                        "statusMessage": {
                            "type": "string"
                        },
                        "events": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "functions": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "tag": {
                            "type": "string"
                        },
                        "webhookUrl": {
                            "type": "string"
                        },
                        "amountOfAddresses": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    "required": [
                        "id",
                        "allAddresses",
                        "demo",
                        "description",
                        "includeChanges",
                        "includeEvents",
                        "includePayload",
                        "isErrorSince",
                        "network",
                        "status",
                        "statusMessage",
                        "events",
                        "functions",
                        "tag",
                        "webhookUrl",
                        "amountOfAddresses"
                    ],
                    "type": "object",
                    "additionalProperties": false
                },
                "AptosCreateStreamType": {
                    "properties": {
                        "webhookUrl": {
                            "type": "string",
                            "description": "Webhook URL where moralis will send the POST request."
                        },
                        "tag": {
                            "type": "string",
                            "description": "A user-provided tag that will be send along the webhook, the user can use this tag to identify the specific stream if multiple streams are present"
                        },
                        "functions": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array",
                            "description": "An Array of events in string-signature format ex: ['0x1::aptos_account::transfer']"
                        },
                        "events": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array",
                            "description": "An Array of events in string-signature format ex: ['0x1::coin::WithdrawEvent']"
                        },
                        "network": {
                            "$ref": "#/components/schemas/AptosNetwork",
                            "description": "The network to listen to"
                        },
                        "includePayload": {
                            "type": "boolean",
                            "description": "Include or not payload for every transaction in webhook defaults to false"
                        },
                        "includeEvents": {
                            "type": "boolean",
                            "description": "Include or not events in webhook defaults to false"
                        },
                        "includeChanges": {
                            "type": "boolean",
                            "description": "Include or not raw changes for every transaction in webhook defaults to false"
                        },
                        "description": {
                            "type": "string",
                            "description": "A description for this stream"
                        },
                        "demo": {
                            "type": "boolean",
                            "description": "Indicator if it is a demo stream"
                        },
                        "allAddresses": {
                            "type": "boolean",
                            "description": "Include events for all addresses (only applied when at least one event or function is provided)"
                        }
                    },
                    "required": [
                        "webhookUrl",
                        "tag",
                        "network",
                        "description"
                    ],
                    "type": "object"
                },
                "Partial_AptosCreateStreamType_": {
                    "properties": {
                        "allAddresses": {
                            "type": "boolean",
                            "description": "Include events for all addresses (only applied when at least one event or function is provided)"
                        },
                        "demo": {
                            "type": "boolean",
                            "description": "Indicator if it is a demo stream"
                        },
                        "description": {
                            "type": "string",
                            "description": "A description for this stream"
                        },
                        "includeChanges": {
                            "type": "boolean",
                            "description": "Include or not raw changes for every transaction in webhook defaults to false"
                        },
                        "includeEvents": {
                            "type": "boolean",
                            "description": "Include or not events in webhook defaults to false"
                        },
                        "includePayload": {
                            "type": "boolean",
                            "description": "Include or not payload for every transaction in webhook defaults to false"
                        },
                        "network": {
                            "$ref": "#/components/schemas/AptosNetwork",
                            "description": "The network to listen to"
                        },
                        "events": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array",
                            "description": "An Array of events in string-signature format ex: ['0x1::coin::WithdrawEvent']"
                        },
                        "functions": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array",
                            "description": "An Array of events in string-signature format ex: ['0x1::aptos_account::transfer']"
                        },
                        "tag": {
                            "type": "string",
                            "description": "A user-provided tag that will be send along the webhook, the user can use this tag to identify the specific stream if multiple streams are present"
                        },
                        "webhookUrl": {
                            "type": "string",
                            "description": "Webhook URL where moralis will send the POST request."
                        }
                    },
                    "type": "object",
                    "description": "Make all properties in T optional"
                },
                "Pick_AptosStreamType.status-or-statusMessage_": {
                    "properties": {
                        "status": {
                            "$ref": "#/components/schemas/StreamsStatus"
                        },
                        "statusMessage": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "status",
                        "statusMessage"
                    ],
                    "type": "object",
                    "description": "From T, pick a set of properties whose keys are in the union K"
                }
            },
            "securitySchemes": {
                "x-api-key": {
                    "type": "apiKey",
                    "name": "x-api-key",
                    "in": "header"
                }
            }
        },
        "info": {
            "title": "Streams Api",
            "version": "1.0.0",
            "description": "API that provides access to Moralis Streams",
            "contact": {}
        },
        "openapi": "3.0.0",
        "paths": {
            "/history": {
                "get": {
                    "operationId": "GetHistory",
                    "responses": {
                        "200": {
                            "description": "Ok",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/historyTypes.HistoryResponse"
                                    }
                                }
                            }
                        }
                    },
                    "description": "Get all history",
                    "summary": "Get history",
                    "tags": [
                        "History"
                    ],
                    "security": [
                        {
                            "x-api-key": []
                        }
                    ],
                    "parameters": [
                        {
                            "in": "query",
                            "name": "limit",
                            "required": true,
                            "schema": {
                                "format": "double",
                                "type": "number"
                            }
                        },
                        {
                            "in": "query",
                            "name": "cursor",
                            "required": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "in": "query",
                            "name": "excludePayload",
                            "required": false,
                            "schema": {
                                "type": "boolean"
                            }
                        }
                    ],
                    "x-tag-sdk": "history"
                }
            },
            "/history/replay/{streamId}/{id}": {
                "post": {
                    "operationId": "ReplayHistory",
                    "responses": {
                        "200": {
                            "description": "Ok",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/historyTypes.HistoryModel"
                                    }
                                }
                            }
                        }
                    },
                    "description": "Replay a specific history.",
                    "summary": "Replay history",
                    "tags": [
                        "History"
                    ],
                    "security": [
                        {
                            "x-api-key": []
                        }
                    ],
                    "parameters": [
                        {
                            "description": "The id of the stream the history will be replayed",
                            "in": "path",
                            "name": "streamId",
                            "required": true,
                            "schema": {
                                "$ref": "#/components/schemas/streamTypes.UUID"
                            }
                        },
                        {
                            "description": "The id of the history to replay",
                            "in": "path",
                            "name": "id",
                            "required": true,
                            "schema": {
                                "$ref": "#/components/schemas/historyTypes.UUID"
                            }
                        }
                    ],
                    "x-tag-sdk": "history"
                }
            },
            "/history/logs": {
                "get": {
                    "operationId": "GetLogs",
                    "responses": {
                        "200": {
                            "description": "Ok",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/historyTypes.IWebhookDeliveryLogsResponse"
                                    }
                                }
                            }
                        }
                    },
                    "description": "get all failed logs",
                    "summary": "Get logs",
                    "tags": [
                        "History"
                    ],
                    "security": [
                        {
                            "x-api-key": []
                        }
                    ],
                    "parameters": [
                        {
                            "in": "query",
                            "name": "limit",
                            "required": true,
                            "schema": {
                                "format": "double",
                                "type": "number"
                            }
                        },
                        {
                            "in": "query",
                            "name": "cursor",
                            "required": false,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "x-tag-sdk": "logs"
                }
            },
            "/settings": {
                "post": {
                    "operationId": "SetSettings",
                    "responses": {
                        "200": {
                            "description": "Ok",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/settingsTypes.SettingsModel"
                                    }
                                }
                            }
                        }
                    },
                    "description": "Set the settings for the current project based on the project api-key.",
                    "summary": "Set project settings",
                    "tags": [
                        "Project"
                    ],
                    "security": [
                        {
                            "x-api-key": []
                        }
                    ],
                    "parameters": [],
                    "requestBody": {
                        "required": true,
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/settingsTypes.SettingsModel"
                                }
                            }
                        }
                    },
                    "x-tag-sdk": "project"
                },
                "get": {
                    "operationId": "GetSettings",
                    "responses": {
                        "200": {
                            "description": "Ok",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/settingsTypes.SettingsModel"
                                    }
                                }
                            }
                        }
                    },
                    "description": "Get the settings for the current project based on the project api-key.",
                    "summary": "Get project settings",
                    "tags": [
                        "Project"
                    ],
                    "security": [
                        {
                            "x-api-key": []
                        }
                    ],
                    "parameters": [],
                    "x-tag-sdk": "project"
                }
            },
            "/stats": {
                "get": {
                    "operationId": "GetStats",
                    "responses": {
                        "200": {
                            "description": "Ok",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/usagestatsTypes.UsageStatsModel"
                                    }
                                }
                            }
                        }
                    },
                    "description": "Get the global stats for the account.",
                    "summary": "Get project stats",
                    "tags": [
                        "Stats"
                    ],
                    "security": [
                        {
                            "x-api-key": []
                        }
                    ],
                    "parameters": [],
                    "x-tag-sdk": "stats"
                }
            },
            "/stats/{streamId}": {
                "get": {
                    "operationId": "GetStatsByStreamId",
                    "responses": {
                        "200": {
                            "description": "Ok",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/usagestatsTypes.UsageStatsModel"
                                    }
                                }
                            }
                        }
                    },
                    "description": "Get the stats for the streamId specified",
                    "summary": "Get project stats by Stream ID",
                    "tags": [
                        "Stats"
                    ],
                    "security": [
                        {
                            "x-api-key": []
                        }
                    ],
                    "parameters": [
                        {
                            "description": "The id of the stream to get the stats",
                            "in": "path",
                            "name": "streamId",
                            "required": true,
                            "schema": {
                                "$ref": "#/components/schemas/streamsTypes.UUID"
                            }
                        }
                    ],
                    "x-tag-sdk": "stats"
                }
            },
            "/streams/evm": {
                "get": {
                    "operationId": "GetStreams",
                    "responses": {
                        "200": {
                            "description": "Ok",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/streamsTypes.StreamsResponse"
                                    }
                                }
                            }
                        }
                    },
                    "description": "Get all the evm streams for the current project based on the project api-key.",
                    "summary": "Get streams",
                    "tags": [
                        "EVM Streams"
                    ],
                    "security": [
                        {
                            "x-api-key": []
                        }
                    ],
                    "parameters": [
                        {
                            "description": "Limit response results max value 100",
                            "in": "query",
                            "name": "limit",
                            "required": true,
                            "schema": {
                                "format": "double",
                                "type": "number"
                            }
                        },
                        {
                            "description": "Cursor for fetching next page",
                            "in": "query",
                            "name": "cursor",
                            "required": false,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "x-tag-sdk": "evm-streams"
                },
                "put": {
                    "operationId": "CreateStream",
                    "responses": {
                        "200": {
                            "description": "Ok",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/streamsTypes.StreamsModel"
                                    }
                                }
                            }
                        }
                    },
                    "description": "Creates a new evm stream.",
                    "summary": "Create stream",
                    "tags": [
                        "EVM Streams"
                    ],
                    "security": [
                        {
                            "x-api-key": []
                        }
                    ],
                    "parameters": [],
                    "requestBody": {
                        "description": "Provide a Stream Model",
                        "required": true,
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/streamsTypes.StreamsModelCreate",
                                    "description": "Provide a Stream Model"
                                }
                            }
                        }
                    },
                    "x-tag-sdk": "evm-streams"
                }
            },
            "/streams/evm/{id}": {
                "get": {
                    "operationId": "GetStream",
                    "responses": {
                        "200": {
                            "description": "Ok",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/streamsTypes.StreamsModel"
                                    }
                                }
                            }
                        }
                    },
                    "description": "Get a specific evm stream.",
                    "summary": "Get a specific evm stream.",
                    "tags": [
                        "EVM Streams"
                    ],
                    "security": [
                        {
                            "x-api-key": []
                        }
                    ],
                    "parameters": [
                        {
                            "description": "The id of the stream to get",
                            "in": "path",
                            "name": "id",
                            "required": true,
                            "schema": {
                                "$ref": "#/components/schemas/streamsTypes.UUID"
                            }
                        }
                    ],
                    "x-tag-sdk": "evm-streams"
                },
                "post": {
                    "operationId": "UpdateStream",
                    "responses": {
                        "200": {
                            "description": "Ok",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/streamsTypes.StreamsModel"
                                    }
                                }
                            }
                        }
                    },
                    "description": "Updates a specific evm stream.",
                    "summary": "Update stream",
                    "tags": [
                        "EVM Streams"
                    ],
                    "security": [
                        {
                            "x-api-key": []
                        }
                    ],
                    "parameters": [
                        {
                            "description": "The id of the stream to update",
                            "in": "path",
                            "name": "id",
                            "required": true,
                            "schema": {
                                "$ref": "#/components/schemas/streamsTypes.UUID"
                            }
                        }
                    ],
                    "requestBody": {
                        "description": "Provide a Stream Model",
                        "required": true,
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Partial_streamsTypes.StreamsModelCreate_",
                                    "description": "Provide a Stream Model"
                                }
                            }
                        }
                    },
                    "x-tag-sdk": "evm-streams"
                },
                "delete": {
                    "operationId": "DeleteStream",
                    "responses": {
                        "200": {
                            "description": "Ok",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/streamsTypes.StreamsModel"
                                    }
                                }
                            }
                        }
                    },
                    "description": "Delete a specific evm stream.",
                    "summary": "Delete stream",
                    "tags": [
                        "EVM Streams"
                    ],
                    "security": [
                        {
                            "x-api-key": []
                        }
                    ],
                    "parameters": [
                        {
                            "description": "The id of the stream to delete",
                            "in": "path",
                            "name": "id",
                            "required": true,
                            "schema": {
                                "$ref": "#/components/schemas/streamsTypes.UUID"
                            }
                        }
                    ],
                    "x-tag-sdk": "evm-streams"
                }
            },
            "/streams/evm/{id}/status": {
                "post": {
                    "operationId": "UpdateStreamStatus",
                    "responses": {
                        "200": {
                            "description": "Ok",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/streamsTypes.StreamsModel"
                                    }
                                }
                            }
                        }
                    },
                    "description": "Updates the status of specific evm stream.",
                    "summary": "Update stream status",
                    "tags": [
                        "EVM Streams"
                    ],
                    "security": [
                        {
                            "x-api-key": []
                        }
                    ],
                    "parameters": [
                        {
                            "description": "The id of the stream to update",
                            "in": "path",
                            "name": "id",
                            "required": true,
                            "schema": {
                                "$ref": "#/components/schemas/streamsTypes.UUID"
                            }
                        }
                    ],
                    "requestBody": {
                        "description": "Provide a Stream Model",
                        "required": true,
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/streamsTypes.StreamsStatusUpdate",
                                    "description": "Provide a Stream Model"
                                }
                            }
                        }
                    },
                    "x-tag-sdk": "evm-streams"
                }
            },
            "/streams/evm/{id}/address": {
                "get": {
                    "operationId": "GetAddresses",
                    "responses": {
                        "200": {
                            "description": "Ok",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/addressesTypes.AddressesResponse"
                                    }
                                }
                            }
                        }
                    },
                    "description": "Get all addresses associated with a specific stream.",
                    "summary": "Get addresses by stream",
                    "tags": [
                        "EVM Streams"
                    ],
                    "security": [
                        {
                            "x-api-key": []
                        }
                    ],
                    "parameters": [
                        {
                            "description": "the id of the stream to get the addresses from",
                            "in": "path",
                            "name": "id",
                            "required": true,
                            "schema": {
                                "$ref": "#/components/schemas/addressesTypes.UUID"
                            }
                        },
                        {
                            "description": "Limit response results max value 100",
                            "in": "query",
                            "name": "limit",
                            "required": true,
                            "schema": {
                                "format": "double",
                                "type": "number"
                            }
                        },
                        {
                            "description": "Cursor for fetching next page",
                            "in": "query",
                            "name": "cursor",
                            "required": false,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "x-tag-sdk": "evm-streams"
                },
                "post": {
                    "operationId": "AddAddressToStream",
                    "responses": {
                        "200": {
                            "description": "Ok",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/addressesTypes.AddressResponse"
                                    }
                                }
                            }
                        }
                    },
                    "description": "Adds an address to a Stream.",
                    "summary": "Add address to stream",
                    "tags": [
                        "EVM Streams"
                    ],
                    "security": [
                        {
                            "x-api-key": []
                        }
                    ],
                    "parameters": [
                        {
                            "description": "The id of the stream to add the address to",
                            "in": "path",
                            "name": "id",
                            "required": true,
                            "schema": {
                                "$ref": "#/components/schemas/streamsTypes.UUID"
                            }
                        }
                    ],
                    "requestBody": {
                        "description": "Provide a Address Model",
                        "required": true,
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/addressesTypes.AddressesAdd",
                                    "description": "Provide a Address Model"
                                }
                            }
                        }
                    },
                    "x-tag-sdk": "evm-streams"
                },
                "delete": {
                    "operationId": "DeleteAddressFromStream",
                    "responses": {
                        "200": {
                            "description": "Ok",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/addressesTypes.AddressResponse"
                                    }
                                }
                            }
                        }
                    },
                    "description": "Deletes an address from a Stream.",
                    "summary": "Delete address from stream",
                    "tags": [
                        "EVM Streams"
                    ],
                    "security": [
                        {
                            "x-api-key": []
                        }
                    ],
                    "parameters": [
                        {
                            "description": "The id of the stream to delete the address from",
                            "in": "path",
                            "name": "id",
                            "required": true,
                            "schema": {
                                "$ref": "#/components/schemas/streamsTypes.UUID"
                            }
                        }
                    ],
                    "requestBody": {
                        "description": "Provide a Address Model",
                        "required": true,
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/addressesTypes.AddressesRemove",
                                    "description": "Provide a Address Model"
                                }
                            }
                        }
                    },
                    "x-tag-sdk": "evm-streams"
                }
            },
            "/streams/aptos": {
                "get": {
                    "operationId": "aptosStreamsGetAll",
                    "responses": {
                        "200": {
                            "description": "Ok",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "properties": {
                                            "total": {
                                                "type": "number",
                                                "format": "double"
                                            },
                                            "result": {
                                                "items": {
                                                    "$ref": "#/components/schemas/AptosStreamType"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "required": [
                                            "total",
                                            "result"
                                        ],
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "description": "Get all aptos streams.",
                    "summary": "Gets all aptos streams.",
                    "tags": [
                        "Aptos Streams"
                    ],
                    "security": [
                        {
                            "x-api-key": []
                        }
                    ],
                    "parameters": [
                        {
                            "description": "Limit response results max value 100",
                            "in": "query",
                            "name": "limit",
                            "required": true,
                            "schema": {
                                "format": "double",
                                "type": "number"
                            }
                        },
                        {
                            "description": "Cursor for fetching next page",
                            "in": "query",
                            "name": "cursor",
                            "required": false,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "x-tag-sdk": "aptos-streams"
                },
                "put": {
                    "operationId": "aptosStreamsCreate",
                    "responses": {
                        "200": {
                            "description": "Ok",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/AptosStreamType"
                                    }
                                }
                            }
                        }
                    },
                    "description": "Creates a new aptos stream.",
                    "summary": "Create stream",
                    "tags": [
                        "Aptos Streams"
                    ],
                    "security": [
                        {
                            "x-api-key": []
                        }
                    ],
                    "parameters": [],
                    "requestBody": {
                        "description": "Provide a valid Aptos Stream Model",
                        "required": true,
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AptosCreateStreamType",
                                    "description": "Provide a valid Aptos Stream Model"
                                }
                            }
                        }
                    },
                    "x-tag-sdk": "aptos-streams"
                }
            },
            "/streams/aptos/{id}": {
                "get": {
                    "operationId": "aptosStreamsGet",
                    "responses": {
                        "200": {
                            "description": "Ok",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/AptosStreamType"
                                    }
                                }
                            }
                        }
                    },
                    "description": "Get a specific aptos stream.",
                    "summary": "Get a specific aptos stream.",
                    "tags": [
                        "Aptos Streams"
                    ],
                    "security": [
                        {
                            "x-api-key": []
                        }
                    ],
                    "parameters": [
                        {
                            "description": "The id of the stream to get",
                            "in": "path",
                            "name": "id",
                            "required": true,
                            "schema": {
                                "$ref": "#/components/schemas/streamsTypes.UUID"
                            }
                        }
                    ],
                    "x-tag-sdk": "aptos-streams"
                },
                "post": {
                    "operationId": "aptosStreamsUpdate",
                    "responses": {
                        "200": {
                            "description": "Ok",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/AptosStreamType"
                                    }
                                }
                            }
                        }
                    },
                    "description": "Updates a new aptos stream.",
                    "summary": "Update stream",
                    "tags": [
                        "Aptos Streams"
                    ],
                    "security": [
                        {
                            "x-api-key": []
                        }
                    ],
                    "parameters": [
                        {
                            "in": "path",
                            "name": "id",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "requestBody": {
                        "description": "Provide valid values of a Aptos Stream Model",
                        "required": true,
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Partial_AptosCreateStreamType_",
                                    "description": "Provide valid values of a Aptos Stream Model"
                                }
                            }
                        }
                    },
                    "x-tag-sdk": "aptos-streams"
                },
                "delete": {
                    "operationId": "aptosStreamsDelete",
                    "responses": {
                        "200": {
                            "description": "Ok",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    },
                    "description": "Deletes a aptos stream.",
                    "summary": "Delete a stream",
                    "tags": [
                        "Aptos Streams"
                    ],
                    "security": [
                        {
                            "x-api-key": []
                        }
                    ],
                    "parameters": [
                        {
                            "description": "the id of the aptos stream to delete",
                            "in": "path",
                            "name": "id",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "x-tag-sdk": "aptos-streams"
                }
            },
            "/streams/aptos/{id}/address": {
                "post": {
                    "operationId": "aptosStreamsAddAddresses",
                    "responses": {
                        "200": {
                            "description": "Ok",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "properties": {
                                            "address": {
                                                "anyOf": [
                                                    {
                                                        "type": "string"
                                                    },
                                                    {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    }
                                                ]
                                            },
                                            "streamId": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "address",
                                            "streamId"
                                        ],
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "description": "Adds addresses to an existing aptos stream",
                    "summary": "Add addresses to an aptos stream",
                    "tags": [
                        "Aptos Streams"
                    ],
                    "security": [
                        {
                            "x-api-key": []
                        }
                    ],
                    "parameters": [
                        {
                            "description": "the id of the aptos stream to get the addresses from",
                            "in": "path",
                            "name": "id",
                            "required": true,
                            "schema": {
                                "$ref": "#/components/schemas/streamsTypes.UUID"
                            }
                        }
                    ],
                    "requestBody": {
                        "required": true,
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "address": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "address"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "x-tag-sdk": "aptos-streams"
                },
                "delete": {
                    "operationId": "aptosStreamsDeleteAddresses",
                    "responses": {
                        "200": {
                            "description": "Ok",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "properties": {
                                            "address": {
                                                "anyOf": [
                                                    {
                                                        "type": "string"
                                                    },
                                                    {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    }
                                                ]
                                            },
                                            "streamId": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "address",
                                            "streamId"
                                        ],
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "description": "Deletes addresses of an existing aptos stream",
                    "summary": "Delete addresses of an aptos stream",
                    "tags": [
                        "Aptos Streams"
                    ],
                    "security": [
                        {
                            "x-api-key": []
                        }
                    ],
                    "parameters": [
                        {
                            "description": "the id of the aptos stream to get the addresses from",
                            "in": "path",
                            "name": "id",
                            "required": true,
                            "schema": {
                                "$ref": "#/components/schemas/streamsTypes.UUID"
                            }
                        }
                    ],
                    "requestBody": {
                        "description": "Provide a list of valid Aptos addresses, or a single address",
                        "required": true,
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "address": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "address"
                                    ],
                                    "type": "object",
                                    "description": "Provide a list of valid Aptos addresses, or a single address"
                                }
                            }
                        }
                    },
                    "x-tag-sdk": "aptos-streams"
                },
                "get": {
                    "operationId": "aptosStreamsGetAddresses",
                    "responses": {
                        "200": {
                            "description": "Ok",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "properties": {
                                            "cursor": {
                                                "type": "string"
                                            },
                                            "total": {
                                                "type": "number",
                                                "format": "double"
                                            },
                                            "result": {
                                                "items": {
                                                    "properties": {
                                                        "address": {
                                                            "anyOf": [
                                                                {
                                                                    "type": "string"
                                                                },
                                                                {
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "address"
                                                    ],
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "required": [
                                            "total",
                                            "result"
                                        ],
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "description": "Get all addresses associated with a specific aptos stream.",
                    "summary": "Get addresses by aptos stream id",
                    "tags": [
                        "Aptos Streams"
                    ],
                    "security": [
                        {
                            "x-api-key": []
                        }
                    ],
                    "parameters": [
                        {
                            "description": "the id of the aptos stream to get the addresses from",
                            "in": "path",
                            "name": "id",
                            "required": true,
                            "schema": {
                                "$ref": "#/components/schemas/streamsTypes.UUID"
                            }
                        },
                        {
                            "description": "Limit response results max value 100",
                            "in": "query",
                            "name": "limit",
                            "required": true,
                            "schema": {
                                "format": "double",
                                "type": "number"
                            }
                        },
                        {
                            "description": "Cursor for fetching next page",
                            "in": "query",
                            "name": "cursor",
                            "required": false,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "x-tag-sdk": "aptos-streams"
                }
            },
            "/streams/aptos/{id}/status": {
                "post": {
                    "operationId": "aptosStreamsUpdateStatus",
                    "responses": {
                        "200": {
                            "description": "Ok",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Pick_AptosStreamType.status-or-statusMessage_"
                                    }
                                }
                            }
                        }
                    },
                    "description": "Update a Stream Status",
                    "summary": "Update a Stream Status",
                    "tags": [
                        "Aptos Streams"
                    ],
                    "security": [
                        {
                            "x-api-key": []
                        }
                    ],
                    "parameters": [
                        {
                            "description": "the id of the aptos stream to update the status",
                            "in": "path",
                            "name": "id",
                            "required": true,
                            "schema": {
                                "$ref": "#/components/schemas/streamsTypes.UUID"
                            }
                        }
                    ],
                    "requestBody": {
                        "description": "Provide an object with the status to update can be 'active' or 'paused'",
                        "required": true,
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/streamsTypes.StreamsStatusUpdate",
                                    "description": "Provide an object with the status to update can be 'active' or 'paused'"
                                }
                            }
                        }
                    },
                    "x-tag-sdk": "aptos-streams"
                }
            }
        },
        "servers": [
            {
                "url": "/"
            }
        ]
    }
}