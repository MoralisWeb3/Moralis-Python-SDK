# coding: utf-8

"""
    EVM API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 2.2
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from openapi_evm_api import schemas  # noqa: F401


class DefiProtocolBalance(
    schemas.AnyTypeSchema,
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        required = {
            "positions",
            "total_usd_value",
        }
        
        class properties:
            total_usd_value = schemas.NumberSchema
            positions = schemas.NumberSchema
            total_unclaimed_usd_value = schemas.NumberSchema
            __annotations__ = {
                "total_usd_value": total_usd_value,
                "positions": positions,
                "total_unclaimed_usd_value": total_unclaimed_usd_value,
            }

    
    positions: MetaOapg.properties.positions
    total_usd_value: MetaOapg.properties.total_usd_value
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["total_usd_value"]) -> MetaOapg.properties.total_usd_value: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["positions"]) -> MetaOapg.properties.positions: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["total_unclaimed_usd_value"]) -> MetaOapg.properties.total_unclaimed_usd_value: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["total_usd_value", "positions", "total_unclaimed_usd_value", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["total_usd_value"]) -> MetaOapg.properties.total_usd_value: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["positions"]) -> MetaOapg.properties.positions: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["total_unclaimed_usd_value"]) -> typing.Union[MetaOapg.properties.total_unclaimed_usd_value, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["total_usd_value", "positions", "total_unclaimed_usd_value", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, bool, None, list, tuple, bytes, io.FileIO, io.BufferedReader, ],
        positions: typing.Union[MetaOapg.properties.positions, decimal.Decimal, int, float, ],
        total_usd_value: typing.Union[MetaOapg.properties.total_usd_value, decimal.Decimal, int, float, ],
        total_unclaimed_usd_value: typing.Union[MetaOapg.properties.total_unclaimed_usd_value, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'DefiProtocolBalance':
        return super().__new__(
            cls,
            *args,
            positions=positions,
            total_usd_value=total_usd_value,
            total_unclaimed_usd_value=total_unclaimed_usd_value,
            _configuration=_configuration,
            **kwargs,
        )
