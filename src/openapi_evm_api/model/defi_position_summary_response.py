# coding: utf-8

"""
    EVM API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 2.2
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from openapi_evm_api import schemas  # noqa: F401


class DefiPositionSummaryResponse(
    schemas.AnyTypeSchema,
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        
        class properties:
            protocol_name = schemas.StrSchema
            protocol_id = schemas.StrSchema
            protocol_url = schemas.StrSchema
            protocol_logo = schemas.StrSchema
            position = schemas.DictSchema
            __annotations__ = {
                "protocol_name": protocol_name,
                "protocol_id": protocol_id,
                "protocol_url": protocol_url,
                "protocol_logo": protocol_logo,
                "position": position,
            }

    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["protocol_name"]) -> MetaOapg.properties.protocol_name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["protocol_id"]) -> MetaOapg.properties.protocol_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["protocol_url"]) -> MetaOapg.properties.protocol_url: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["protocol_logo"]) -> MetaOapg.properties.protocol_logo: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["position"]) -> MetaOapg.properties.position: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["protocol_name", "protocol_id", "protocol_url", "protocol_logo", "position", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["protocol_name"]) -> typing.Union[MetaOapg.properties.protocol_name, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["protocol_id"]) -> typing.Union[MetaOapg.properties.protocol_id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["protocol_url"]) -> typing.Union[MetaOapg.properties.protocol_url, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["protocol_logo"]) -> typing.Union[MetaOapg.properties.protocol_logo, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["position"]) -> typing.Union[MetaOapg.properties.position, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["protocol_name", "protocol_id", "protocol_url", "protocol_logo", "position", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, bool, None, list, tuple, bytes, io.FileIO, io.BufferedReader, ],
        protocol_name: typing.Union[MetaOapg.properties.protocol_name, str, schemas.Unset] = schemas.unset,
        protocol_id: typing.Union[MetaOapg.properties.protocol_id, str, schemas.Unset] = schemas.unset,
        protocol_url: typing.Union[MetaOapg.properties.protocol_url, str, schemas.Unset] = schemas.unset,
        protocol_logo: typing.Union[MetaOapg.properties.protocol_logo, str, schemas.Unset] = schemas.unset,
        position: typing.Union[MetaOapg.properties.position, dict, frozendict.frozendict, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'DefiPositionSummaryResponse':
        return super().__new__(
            cls,
            *args,
            protocol_name=protocol_name,
            protocol_id=protocol_id,
            protocol_url=protocol_url,
            protocol_logo=protocol_logo,
            position=position,
            _configuration=_configuration,
            **kwargs,
        )
