# coding: utf-8

"""
    EVM API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 2.2
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from openapi_evm_api import schemas  # noqa: F401


class NftTradesChainList(
    schemas.EnumBase,
    schemas.StrSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        enum_value_to_name = {
            "eth": "ETH",
            "0x1": "X1",
            "polygon": "POLYGON",
            "0x89": "X89",
            "bsc": "BSC",
            "0x38": "X38",
            "avalanche": "AVALANCHE",
            "0xa86a": "XA86A",
            "arbitrum": "ARBITRUM",
            "0xa4b1": "XA4B1",
            "base": "BASE",
            "0x2105": "X2105",
            "optimism": "OPTIMISM",
            "0xa": "XA",
        }
    
    @schemas.classproperty
    def ETH(cls):
        return cls("eth")
    
    @schemas.classproperty
    def X1(cls):
        return cls("0x1")
    
    @schemas.classproperty
    def POLYGON(cls):
        return cls("polygon")
    
    @schemas.classproperty
    def X89(cls):
        return cls("0x89")
    
    @schemas.classproperty
    def BSC(cls):
        return cls("bsc")
    
    @schemas.classproperty
    def X38(cls):
        return cls("0x38")
    
    @schemas.classproperty
    def AVALANCHE(cls):
        return cls("avalanche")
    
    @schemas.classproperty
    def XA86A(cls):
        return cls("0xa86a")
    
    @schemas.classproperty
    def ARBITRUM(cls):
        return cls("arbitrum")
    
    @schemas.classproperty
    def XA4B1(cls):
        return cls("0xa4b1")
    
    @schemas.classproperty
    def BASE(cls):
        return cls("base")
    
    @schemas.classproperty
    def X2105(cls):
        return cls("0x2105")
    
    @schemas.classproperty
    def OPTIMISM(cls):
        return cls("optimism")
    
    @schemas.classproperty
    def XA(cls):
        return cls("0xa")
