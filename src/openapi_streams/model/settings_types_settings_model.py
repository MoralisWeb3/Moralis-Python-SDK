# coding: utf-8

"""
    Streams Api

    API that provides access to Moralis Streams  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from openapi_streams import schemas  # noqa: F401


class SettingsTypesSettingsModel(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        
        class properties:
        
            @staticmethod
            def region() -> typing.Type['SettingsRegion']:
                return SettingsRegion
            secretKey = schemas.StrSchema
            __annotations__ = {
                "region": region,
                "secretKey": secretKey,
            }
        additional_properties = schemas.NotAnyTypeSchema
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["region"]) -> 'SettingsRegion': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["secretKey"]) -> MetaOapg.properties.secretKey: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["region"], typing_extensions.Literal["secretKey"], ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["region"]) -> typing.Union['SettingsRegion', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["secretKey"]) -> typing.Union[MetaOapg.properties.secretKey, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["region"], typing_extensions.Literal["secretKey"], ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        region: typing.Union['SettingsRegion', schemas.Unset] = schemas.unset,
        secretKey: typing.Union[MetaOapg.properties.secretKey, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'SettingsTypesSettingsModel':
        return super().__new__(
            cls,
            *args,
            region=region,
            secretKey=secretKey,
            _configuration=_configuration,
        )

from openapi_streams.model.settings_region import SettingsRegion
